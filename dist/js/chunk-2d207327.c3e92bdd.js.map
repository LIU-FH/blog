{"version":3,"sources":["webpack:///./node_modules/localforage/dist/localforage.js"],"names":["f","module","exports","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length","1","_dereq_","global","scheduleDrain","draining","Mutation","MutationObserver","WebKitMutationObserver","called","observer","nextTick","element","document","createTextNode","observe","characterData","data","setImmediate","MessageChannel","createElement","scriptEl","onreadystatechange","parentNode","removeChild","documentElement","appendChild","setTimeout","channel","port1","onmessage","port2","postMessage","queue","oldQueue","len","immediate","task","push","this","self","window","2","INTERNAL","handlers","REJECTED","FULFILLED","PENDING","Promise","resolver","TypeError","state","outcome","safelyResolveThenable","QueueItem","promise","onFulfilled","onRejected","callFulfilled","otherCallFulfilled","callRejected","otherCallRejected","unwrap","func","value","returnValue","reject","resolve","getThen","obj","then","apply","arguments","thenable","onError","onSuccess","tryToUnwrap","result","tryCatch","status","out","reason","all","iterable","Object","prototype","toString","values","Array","resolved","allResolver","resolveFromAll","outValue","error","race","response","constructor","3","4","_typeof","Symbol","iterator","_classCallCheck","instance","Constructor","getIDB","indexedDB","webkitIndexedDB","mozIndexedDB","OIndexedDB","msIndexedDB","idb","isIndexedDBValid","isSafari","openDatabase","test","navigator","userAgent","platform","hasFetch","fetch","indexOf","IDBKeyRange","createBlob","parts","properties","Blob","name","Builder","BlobBuilder","MSBlobBuilder","MozBlobBuilder","WebKitBlobBuilder","builder","append","getBlob","type","Promise$1","executeCallback","callback","executeTwoCallbacks","errorCallback","normalizeKey","key","console","warn","String","getCallback","DETECT_BLOB_SUPPORT_STORE","supportsBlobs","dbContexts","READ_ONLY","READ_WRITE","_binStringToArrayBuffer","bin","buf","ArrayBuffer","arr","Uint8Array","charCodeAt","_checkBlobSupportWithoutCaching","txn","transaction","blob","objectStore","put","onabort","preventDefault","stopPropagation","oncomplete","matchedChrome","match","matchedEdge","parseInt","_checkBlobSupport","_deferReadiness","dbInfo","dbContext","deferredOperation","deferredOperations","dbReady","_advanceReadiness","pop","_rejectReadiness","err","_getConnection","upgradeNeeded","createDbContext","db","close","dbArgs","version","openreq","open","onupgradeneeded","createObjectStore","storeName","oldVersion","ex","newVersion","onerror","onsuccess","_getOriginalConnection","_getUpgradedConnection","_isUpgradeNeeded","defaultVersion","isNewStore","objectStoreNames","contains","isDowngrade","isUpgrade","incVersion","_encodeBlob","reader","FileReader","onloadend","base64","btoa","target","__local_forage_encoded_blob","readAsBinaryString","_decodeBlob","encodedBlob","arrayBuff","atob","_isEncodedBlob","_fullyReady","_initReady","_dbInfo","_tryReconnect","forages","forage","createTransaction","mode","retries","undefined","tx","_initStorage","options","ready","initPromises","ignoreErrors","j","slice","_defaultConfig","k","getItem","store","req","get","iterate","openCursor","iterationNumber","cursor","setItem","blobSupport","removeItem","clear","count","advanced","advance","keys","dropInstance","currentConfig","config","isCurrentDb","dbPromise","dropObjectPromise","deleteObjectStore","_forage2","dropDBPromise","deleteDatabase","onblocked","_forage","asyncStorage","_driver","_support","isWebSQLValid","BASE_CHARS","BLOB_TYPE_PREFIX","BLOB_TYPE_PREFIX_REGEX","SERIALIZED_MARKER","SERIALIZED_MARKER_LENGTH","TYPE_ARRAYBUFFER","TYPE_BLOB","TYPE_INT8ARRAY","TYPE_UINT8ARRAY","TYPE_UINT8CLAMPEDARRAY","TYPE_INT16ARRAY","TYPE_INT32ARRAY","TYPE_UINT16ARRAY","TYPE_UINT32ARRAY","TYPE_FLOAT32ARRAY","TYPE_FLOAT64ARRAY","TYPE_SERIALIZED_MARKER_LENGTH","toString$1","stringToBuffer","serializedString","encoded1","encoded2","encoded3","encoded4","bufferLength","p","buffer","bytes","bufferToString","base64String","substring","serialize","valueType","marker","fileReader","onload","str","readAsArrayBuffer","JSON","stringify","deserialize","parse","blobType","matcher","Int8Array","Uint8ClampedArray","Int16Array","Uint16Array","Int32Array","Uint32Array","Float32Array","Float64Array","localforageSerializer","createDbTable","executeSql","_initStorage$1","dbInfoPromise","description","size","serializer","tryExecuteSql","sqlStatement","args","SYNTAX_ERR","results","rows","getItem$1","item","iterate$1","_setItem","retriesLeft","originalValue","sqlError","QUOTA_ERR","setItem$1","removeItem$1","clear$1","length$1","c","key$1","keys$1","getAllStoreNames","storeNames","dropInstance$1","operationInfo","dropTable","operations","webSQLStorage","isLocalStorageValid","localStorage","_getKeyPrefix","defaultConfig","keyPrefix","checkIfLocalStorageThrows","localStorageTestKey","_isLocalStorageUsable","_initStorage$2","clear$2","getItem$2","iterate$2","keyPrefixLength","key$2","keys$2","itemKey","length$2","removeItem$2","setItem$2","dropInstance$2","localStorageWrapper","sameValue","x","y","isNaN","includes","array","searchElement","isArray","arg","DefinedDrivers","DriverSupport","DefaultDrivers","INDEXEDDB","WEBSQL","LOCALSTORAGE","DefaultDriverOrder","OptionalDriverMethods","LibraryMethods","concat","DefaultConfig","driver","callWhenReady","localForageInstance","libraryMethod","_args","extend","_key","hasOwnProperty","LocalForage","driverTypeKey","driverName","defineDriver","_config","_driverSet","_initDriver","_ready","_wrapLibraryMethodsWithReady","setDriver","replace","driverObject","complianceError","driverMethods","driverMethodName","isRequired","configureMissingMethods","methodNotImplementedFactory","methodName","_i","_len","optionalDriverMethod","setDriverSupport","support","info","getDriver","getDriverPromise","getSerializer","serializerPromise","drivers","supportedDrivers","_getSupportedDrivers","setDriverToConfig","extendSelfWithDriver","_extend","initDriver","currentDriverIndex","driverPromiseLoop","oldDriverSetDone","supports","libraryMethodsAndProperties","createInstance","localforage_js"],"mappings":"oGAAA;;;;;;;CAMA,SAAUA,GAA8DC,EAAOC,QAAQF,KAAvF,EAAuU,WAAqC,OAAO,SAAUG,EAAEC,EAAEC,EAAEC,GAAG,SAASC,EAAEC,EAAEC,GAAG,IAAIJ,EAAEG,GAAG,CAAC,IAAIJ,EAAEI,GAAG,CAAC,IAAIE,EAAkB,mBAATC,GAAqBA,EAAQ,IAAIF,GAAGC,EAAE,OAAO,EAAEF,GAAE,GAAI,GAAGI,EAAE,OAAOA,EAAEJ,GAAE,GAAI,IAAIR,EAAE,IAAIa,MAAM,uBAAuBL,EAAE,KAAK,MAAOR,EAAEc,KAAK,mBAAoBd,EAAG,IAAIe,EAAEV,EAAEG,GAAG,CAACN,QAAQ,IAAIE,EAAEI,GAAG,GAAGQ,KAAKD,EAAEb,SAAQ,SAASC,GAAG,IAAIE,EAAED,EAAEI,GAAG,GAAGL,GAAG,OAAOI,EAAEF,GAAIF,KAAIY,EAAEA,EAAEb,QAAQC,EAAEC,EAAEC,EAAEC,GAAG,OAAOD,EAAEG,GAAGN,QAAkD,IAA1C,IAAIU,EAAkB,mBAATD,GAAqBA,EAAgBH,EAAE,EAAEA,EAAEF,EAAEW,OAAOT,IAAID,EAAED,EAAEE,IAAI,OAAOD,EAA1b,CAA8b,CAACW,EAAE,CAAC,SAASC,EAAQlB,EAAOC,IAC70B,SAAWkB,GACX,aACA,IAEIC,EAyCAC,EA3CAC,EAAWH,EAAOI,kBAAoBJ,EAAOK,uBAK/C,GAAIF,EAAU,CACZ,IAAIG,EAAS,EACTC,EAAW,IAAIJ,EAASK,GACxBC,EAAUT,EAAOU,SAASC,eAAe,IAC7CJ,EAASK,QAAQH,EAAS,CACxBI,eAAe,IAEjBZ,EAAgB,WACdQ,EAAQK,KAAQR,IAAWA,EAAS,QAEjC,GAAKN,EAAOe,cAAiD,qBAA1Bf,EAAOgB,eAO/Cf,EADS,aAAcD,GAAU,uBAAwBA,EAAOU,SAASO,cAAc,UACvE,WAId,IAAIC,EAAWlB,EAAOU,SAASO,cAAc,UAC7CC,EAASC,mBAAqB,WAC5BX,IAEAU,EAASC,mBAAqB,KAC9BD,EAASE,WAAWC,YAAYH,GAChCA,EAAW,MAEblB,EAAOU,SAASY,gBAAgBC,YAAYL,IAG9B,WACdM,WAAWhB,EAAU,QAvBwD,CAC/E,IAAIiB,EAAU,IAAIzB,EAAOgB,eACzBS,EAAQC,MAAMC,UAAYnB,EAC1BP,EAAgB,WACdwB,EAAQG,MAAMC,YAAY,IAyBhC,IAAIC,EAAQ,GAEZ,SAAStB,IAEP,IAAIhB,EAAGuC,EADP7B,GAAW,EAEX,IAAI8B,EAAMF,EAAMjC,OAChB,MAAOmC,EAAK,CACVD,EAAWD,EACXA,EAAQ,GACRtC,GAAK,EACL,QAASA,EAAIwC,EACXD,EAASvC,KAEXwC,EAAMF,EAAMjC,OAEdK,GAAW,EAIb,SAAS+B,EAAUC,GACQ,IAArBJ,EAAMK,KAAKD,IAAgBhC,GAC7BD,IAHJpB,EAAOC,QAAUmD,IAOdrC,KAAKwC,KAAuB,qBAAXpC,EAAyBA,EAAyB,qBAATqC,KAAuBA,KAAyB,qBAAXC,OAAyBA,OAAS,KAClI,IAAIC,EAAE,CAAC,SAASxC,EAAQlB,EAAOC,GACjC,aACA,IAAImD,EAAYlC,EAAQ,GAGxB,SAASyC,KAET,IAAIC,EAAW,GAEXC,EAAW,CAAC,YACZC,EAAY,CAAC,aACbC,EAAU,CAAC,WAIf,SAASC,EAAQC,GACf,GAAwB,oBAAbA,EACT,MAAM,IAAIC,UAAU,+BAEtBX,KAAKY,MAAQJ,EACbR,KAAKN,MAAQ,GACbM,KAAKa,aAAU,EACXH,IAAaN,GACfU,EAAsBd,KAAMU,GAsBhC,SAASK,EAAUC,EAASC,EAAaC,GACvClB,KAAKgB,QAAUA,EACY,oBAAhBC,IACTjB,KAAKiB,YAAcA,EACnBjB,KAAKmB,cAAgBnB,KAAKoB,oBAEF,oBAAfF,IACTlB,KAAKkB,WAAaA,EAClBlB,KAAKqB,aAAerB,KAAKsB,mBAgB7B,SAASC,EAAOP,EAASQ,EAAMC,GAC7B5B,GAAU,WACR,IAAI6B,EACJ,IACEA,EAAcF,EAAKC,GACnB,MAAO9E,GACP,OAAO0D,EAASsB,OAAOX,EAASrE,GAE9B+E,IAAgBV,EAClBX,EAASsB,OAAOX,EAAS,IAAIL,UAAU,uCAEvCN,EAASuB,QAAQZ,EAASU,MAoChC,SAASG,EAAQC,GAEf,IAAIC,EAAOD,GAAOA,EAAIC,KACtB,GAAID,IAAuB,kBAARA,GAAmC,oBAARA,IAAuC,oBAATC,EAC1E,OAAO,WACLA,EAAKC,MAAMF,EAAKG,YAKtB,SAASnB,EAAsBb,EAAMiC,GAEnC,IAAIhE,GAAS,EACb,SAASiE,EAAQV,GACXvD,IAGJA,GAAS,EACTmC,EAASsB,OAAO1B,EAAMwB,IAGxB,SAASW,EAAUX,GACbvD,IAGJA,GAAS,EACTmC,EAASuB,QAAQ3B,EAAMwB,IAGzB,SAASY,IACPH,EAASE,EAAWD,GAGtB,IAAIG,EAASC,EAASF,GACA,UAAlBC,EAAOE,QACTL,EAAQG,EAAOb,OAInB,SAASc,EAASf,EAAMC,GACtB,IAAIgB,EAAM,GACV,IACEA,EAAIhB,MAAQD,EAAKC,GACjBgB,EAAID,OAAS,UACb,MAAO7F,GACP8F,EAAID,OAAS,QACbC,EAAIhB,MAAQ9E,EAEd,OAAO8F,EAIT,SAASb,EAAQH,GACf,OAAIA,aAAiBzB,KACZyB,EAEFpB,EAASuB,QAAQ,IAAI5B,KAAKI,GAAWqB,GAI9C,SAASE,EAAOe,GACd,IAAI1B,EAAU,IAAIhB,KAAKI,GACvB,OAAOC,EAASsB,OAAOX,EAAS0B,GAIlC,SAASC,EAAIC,GACX,IAAI3C,EAAOD,KACX,GAAiD,mBAA7C6C,OAAOC,UAAUC,SAASvF,KAAKoF,GACjC,OAAO5C,KAAK2B,OAAO,IAAIhB,UAAU,qBAGnC,IAAIf,EAAMgD,EAASnF,OACfS,GAAS,EACb,IAAK0B,EACH,OAAOI,KAAK4B,QAAQ,IAGtB,IAAIoB,EAAS,IAAIC,MAAMrD,GACnBsD,EAAW,EACX9F,GAAK,EACL4D,EAAU,IAAIhB,KAAKI,GAEvB,QAAShD,EAAIwC,EACXuD,EAAYP,EAASxF,GAAIA,GAE3B,OAAO4D,EACP,SAASmC,EAAY1B,EAAOrE,GAO1B,SAASgG,EAAeC,GACtBL,EAAO5F,GAAKiG,IACNH,IAAatD,GAAQ1B,IACzBA,GAAS,EACTmC,EAASuB,QAAQZ,EAASgC,IAV9B/C,EAAK2B,QAAQH,GAAOM,KAAKqB,GAAgB,SAAUE,GAC5CpF,IACHA,GAAS,EACTmC,EAASsB,OAAOX,EAASsC,QAcjC,SAASC,EAAKX,GACZ,IAAI3C,EAAOD,KACX,GAAiD,mBAA7C6C,OAAOC,UAAUC,SAASvF,KAAKoF,GACjC,OAAO5C,KAAK2B,OAAO,IAAIhB,UAAU,qBAGnC,IAAIf,EAAMgD,EAASnF,OACfS,GAAS,EACb,IAAK0B,EACH,OAAOI,KAAK4B,QAAQ,IAGtB,IAAIxE,GAAK,EACL4D,EAAU,IAAIhB,KAAKI,GAEvB,QAAShD,EAAIwC,EACXc,EAASkC,EAASxF,IAEpB,OAAO4D,EACP,SAASN,EAASe,GAChBxB,EAAK2B,QAAQH,GAAOM,MAAK,SAAUyB,GAC5BtF,IACHA,GAAS,EACTmC,EAASuB,QAAQZ,EAASwC,OAE3B,SAAUF,GACNpF,IACHA,GAAS,EACTmC,EAASsB,OAAOX,EAASsC,QA5OjC7G,EAAOC,QAAU+D,EAcjBA,EAAQqC,UAAU,SAAW,SAAU5B,GACrC,OAAOlB,KAAK+B,KAAK,KAAMb,IAEzBT,EAAQqC,UAAUf,KAAO,SAAUd,EAAaC,GAC9C,GAA2B,oBAAhBD,GAA8BjB,KAAKY,QAAUL,GAChC,oBAAfW,GAA6BlB,KAAKY,QAAUN,EACnD,OAAON,KAET,IAAIgB,EAAU,IAAIhB,KAAKyD,YAAYrD,GACnC,GAAIJ,KAAKY,QAAUJ,EAAS,CAC1B,IAAIE,EAAWV,KAAKY,QAAUL,EAAYU,EAAcC,EACxDK,EAAOP,EAASN,EAAUV,KAAKa,cAE/Bb,KAAKN,MAAMK,KAAK,IAAIgB,EAAUC,EAASC,EAAaC,IAGtD,OAAOF,GAaTD,EAAU+B,UAAU3B,cAAgB,SAAUM,GAC5CpB,EAASuB,QAAQ5B,KAAKgB,QAASS,IAEjCV,EAAU+B,UAAU1B,mBAAqB,SAAUK,GACjDF,EAAOvB,KAAKgB,QAAShB,KAAKiB,YAAaQ,IAEzCV,EAAU+B,UAAUzB,aAAe,SAAUI,GAC3CpB,EAASsB,OAAO3B,KAAKgB,QAASS,IAEhCV,EAAU+B,UAAUxB,kBAAoB,SAAUG,GAChDF,EAAOvB,KAAKgB,QAAShB,KAAKkB,WAAYO,IAmBxCpB,EAASuB,QAAU,SAAU3B,EAAMwB,GACjC,IAAIa,EAASC,EAASV,EAASJ,GAC/B,GAAsB,UAAlBa,EAAOE,OACT,OAAOnC,EAASsB,OAAO1B,EAAMqC,EAAOb,OAEtC,IAAIS,EAAWI,EAAOb,MAEtB,GAAIS,EACFpB,EAAsBb,EAAMiC,OACvB,CACLjC,EAAKW,MAAQL,EACbN,EAAKY,QAAUY,EACf,IAAIrE,GAAK,EACLwC,EAAMK,EAAKP,MAAMjC,OACrB,QAASL,EAAIwC,EACXK,EAAKP,MAAMtC,GAAG+D,cAAcM,GAGhC,OAAOxB,GAETI,EAASsB,OAAS,SAAU1B,EAAMqD,GAChCrD,EAAKW,MAAQN,EACbL,EAAKY,QAAUyC,EACf,IAAIlG,GAAK,EACLwC,EAAMK,EAAKP,MAAMjC,OACrB,QAASL,EAAIwC,EACXK,EAAKP,MAAMtC,GAAGiE,aAAaiC,GAE7B,OAAOrD,GAsDTQ,EAAQmB,QAAUA,EAQlBnB,EAAQkB,OAASA,EAMjBlB,EAAQkC,IAAMA,EAuCdlC,EAAQ8C,KAAOA,GAmCb,CAAC,EAAI,IAAIG,EAAE,CAAC,SAAS/F,EAAQlB,EAAOC,IACtC,SAAWkB,GACX,aAC8B,oBAAnBA,EAAO6C,UAChB7C,EAAO6C,QAAU9C,EAAQ,MAGxBH,KAAKwC,KAAuB,qBAAXpC,EAAyBA,EAAyB,qBAATqC,KAAuBA,KAAyB,qBAAXC,OAAyBA,OAAS,KAClI,CAAC,EAAI,IAAIyD,EAAE,CAAC,SAAShG,EAAQlB,EAAOC,GACtC,aAEA,IAAIkH,EAA4B,oBAAXC,QAAoD,kBAApBA,OAAOC,SAAwB,SAAUhC,GAAO,cAAcA,GAAS,SAAUA,GAAO,OAAOA,GAAyB,oBAAX+B,QAAyB/B,EAAI2B,cAAgBI,QAAU/B,IAAQ+B,OAAOf,UAAY,gBAAkBhB,GAEtQ,SAASiC,EAAgBC,EAAUC,GAAe,KAAMD,aAAoBC,GAAgB,MAAM,IAAItD,UAAU,qCAEhH,SAASuD,IAEL,IACI,GAAyB,qBAAdC,UACP,OAAOA,UAEX,GAA+B,qBAApBC,gBACP,OAAOA,gBAEX,GAA4B,qBAAjBC,aACP,OAAOA,aAEX,GAA0B,qBAAfC,WACP,OAAOA,WAEX,GAA2B,qBAAhBC,YACP,OAAOA,YAEb,MAAO5H,GACL,QAIR,IAAI6H,EAAMN,IAEV,SAASO,IACL,IAGI,IAAKD,EACD,OAAO,EAMX,IAAIE,EAAmC,qBAAjBC,cAAgC,4BAA4BC,KAAKC,UAAUC,aAAe,SAASF,KAAKC,UAAUC,aAAe,aAAaF,KAAKC,UAAUE,UAE/KC,EAA4B,oBAAVC,QAAsE,IAA9CA,MAAMlC,WAAWmC,QAAQ,gBAIvE,QAASR,GAAYM,IAAkC,qBAAdb,WAKlB,qBAAhBgB,YACT,MAAOxI,GACL,OAAO,GAUf,SAASyI,EAAWC,EAAOC,GAEvBD,EAAQA,GAAS,GACjBC,EAAaA,GAAc,GAC3B,IACI,OAAO,IAAIC,KAAKF,EAAOC,GACzB,MAAO3I,GACL,GAAe,cAAXA,EAAE6I,KACF,MAAM7I,EAIV,IAFA,IAAI8I,EAAiC,qBAAhBC,YAA8BA,YAAuC,qBAAlBC,cAAgCA,cAA0C,qBAAnBC,eAAiCA,eAAiBC,kBAC7KC,EAAU,IAAIL,EACTrI,EAAI,EAAGA,EAAIiI,EAAM5H,OAAQL,GAAK,EACnC0I,EAAQC,OAAOV,EAAMjI,IAEzB,OAAO0I,EAAQE,QAAQV,EAAWW,OAMnB,qBAAZxF,SAGP9C,EAAQ,GAEZ,IAAIuI,EAAYzF,QAEhB,SAAS0F,EAAgBnF,EAASoF,GAC1BA,GACApF,EAAQe,MAAK,SAAUO,GACnB8D,EAAS,KAAM9D,MAChB,SAAUgB,GACT8C,EAAS9C,MAKrB,SAAS+C,EAAoBrF,EAASoF,EAAUE,GACpB,oBAAbF,GACPpF,EAAQe,KAAKqE,GAGY,oBAAlBE,GACPtF,EAAQ,SAASsF,GAIzB,SAASC,EAAaC,GAOlB,MALmB,kBAARA,IACPC,QAAQC,KAAKF,EAAM,2CACnBA,EAAMG,OAAOH,IAGVA,EAGX,SAASI,IACL,GAAI3E,UAAUxE,QAAqD,oBAApCwE,UAAUA,UAAUxE,OAAS,GACxD,OAAOwE,UAAUA,UAAUxE,OAAS,GAO5C,IAAIoJ,EAA4B,mCAC5BC,OAAgB,EAChBC,EAAa,GACbhE,EAAWF,OAAOC,UAAUC,SAG5BiE,EAAY,WACZC,EAAa,YAOjB,SAASC,EAAwBC,GAI7B,IAHA,IAAI1J,EAAS0J,EAAI1J,OACb2J,EAAM,IAAIC,YAAY5J,GACtB6J,EAAM,IAAIC,WAAWH,GAChBhK,EAAI,EAAGA,EAAIK,EAAQL,IACxBkK,EAAIlK,GAAK+J,EAAIK,WAAWpK,GAE5B,OAAOgK,EAkBX,SAASK,EAAgCjD,GACrC,OAAO,IAAI0B,GAAU,SAAUtE,GAC3B,IAAI8F,EAAMlD,EAAImD,YAAYd,EAA2BI,GACjDW,EAAOxC,EAAW,CAAC,KACvBsC,EAAIG,YAAYhB,GAA2BiB,IAAIF,EAAM,OAErDF,EAAIK,QAAU,SAAUpL,GAGpBA,EAAEqL,iBACFrL,EAAEsL,kBACFrG,GAAQ,IAGZ8F,EAAIQ,WAAa,WACb,IAAIC,EAAgBtD,UAAUC,UAAUsD,MAAM,iBAC1CC,EAAcxD,UAAUC,UAAUsD,MAAM,UAG5CxG,EAAQyG,IAAgBF,GAAiBG,SAASH,EAAc,GAAI,KAAO,QAEhF,UAAS,WACR,OAAO,KAIf,SAASI,EAAkB/D,GACvB,MAA6B,mBAAlBsC,EACAZ,EAAUtE,QAAQkF,GAEtBW,EAAgCjD,GAAKzC,MAAK,SAAUN,GAEvD,OADAqF,EAAgBrF,EACTqF,KAIf,SAAS0B,EAAgBC,GACrB,IAAIC,EAAY3B,EAAW0B,EAAOjD,MAG9BmD,EAAoB,GAExBA,EAAkB3H,QAAU,IAAIkF,GAAU,SAAUtE,EAASD,GACzDgH,EAAkB/G,QAAUA,EAC5B+G,EAAkBhH,OAASA,KAI/B+G,EAAUE,mBAAmB7I,KAAK4I,GAG7BD,EAAUG,QAGXH,EAAUG,QAAUH,EAAUG,QAAQ9G,MAAK,WACvC,OAAO4G,EAAkB3H,WAH7B0H,EAAUG,QAAUF,EAAkB3H,QAQ9C,SAAS8H,EAAkBL,GACvB,IAAIC,EAAY3B,EAAW0B,EAAOjD,MAG9BmD,EAAoBD,EAAUE,mBAAmBG,MAIrD,GAAIJ,EAEA,OADAA,EAAkB/G,UACX+G,EAAkB3H,QAIjC,SAASgI,EAAiBP,EAAQQ,GAC9B,IAAIP,EAAY3B,EAAW0B,EAAOjD,MAG9BmD,EAAoBD,EAAUE,mBAAmBG,MAIrD,GAAIJ,EAEA,OADAA,EAAkBhH,OAAOsH,GAClBN,EAAkB3H,QAIjC,SAASkI,EAAeT,EAAQU,GAC5B,OAAO,IAAIjD,GAAU,SAAUtE,EAASD,GAGpC,GAFAoF,EAAW0B,EAAOjD,MAAQuB,EAAW0B,EAAOjD,OAAS4D,IAEjDX,EAAOY,GAAI,CACX,IAAIF,EAIA,OAAOvH,EAAQ6G,EAAOY,IAHtBb,EAAgBC,GAChBA,EAAOY,GAAGC,QAMlB,IAAIC,EAAS,CAACd,EAAOjD,MAEjB2D,GACAI,EAAOxJ,KAAK0I,EAAOe,SAGvB,IAAIC,EAAUjF,EAAIkF,KAAK1H,MAAMwC,EAAK+E,GAE9BJ,IACAM,EAAQE,gBAAkB,SAAUhN,GAChC,IAAI0M,EAAKI,EAAQnH,OACjB,IACI+G,EAAGO,kBAAkBnB,EAAOoB,WACxBlN,EAAEmN,YAAc,GAEhBT,EAAGO,kBAAkB/C,GAE3B,MAAOkD,GACL,GAAgB,oBAAZA,EAAGvE,KAGH,MAAMuE,EAFNtD,QAAQC,KAAK,iBAAmB+B,EAAOjD,KAAO,oCAA2C7I,EAAEmN,WAAa,eAAiBnN,EAAEqN,WAAa,sBAAwBvB,EAAOoB,UAAY,wBAQnMJ,EAAQQ,QAAU,SAAUtN,GACxBA,EAAEqL,iBACFrG,EAAO8H,EAAQnG,QAGnBmG,EAAQS,UAAY,WAChBtI,EAAQ6H,EAAQnH,QAChBwG,EAAkBL,OAK9B,SAAS0B,EAAuB1B,GAC5B,OAAOS,EAAeT,GAAQ,GAGlC,SAAS2B,EAAuB3B,GAC5B,OAAOS,EAAeT,GAAQ,GAGlC,SAAS4B,EAAiB5B,EAAQ6B,GAC9B,IAAK7B,EAAOY,GACR,OAAO,EAGX,IAAIkB,GAAc9B,EAAOY,GAAGmB,iBAAiBC,SAAShC,EAAOoB,WACzDa,EAAcjC,EAAOe,QAAUf,EAAOY,GAAGG,QACzCmB,EAAYlC,EAAOe,QAAUf,EAAOY,GAAGG,QAY3C,GAVIkB,IAGIjC,EAAOe,UAAYc,GACnB7D,QAAQC,KAAK,iBAAmB+B,EAAOjD,KAAO,uCAA6CiD,EAAOY,GAAGG,QAAU,eAAiBf,EAAOe,QAAU,KAGrJf,EAAOe,QAAUf,EAAOY,GAAGG,SAG3BmB,GAAaJ,EAAY,CAIzB,GAAIA,EAAY,CACZ,IAAIK,EAAanC,EAAOY,GAAGG,QAAU,EACjCoB,EAAanC,EAAOe,UACpBf,EAAOe,QAAUoB,GAIzB,OAAO,EAGX,OAAO,EAIX,SAASC,EAAYjD,GACjB,OAAO,IAAI1B,GAAU,SAAUtE,EAASD,GACpC,IAAImJ,EAAS,IAAIC,WACjBD,EAAOb,QAAUtI,EACjBmJ,EAAOE,UAAY,SAAUrO,GACzB,IAAIsO,EAASC,KAAKvO,EAAEwO,OAAO7I,QAAU,IACrCV,EAAQ,CACJwJ,6BAA6B,EAC7B1M,KAAMuM,EACNhF,KAAM2B,EAAK3B,QAGnB6E,EAAOO,mBAAmBzD,MAKlC,SAAS0D,EAAYC,GACjB,IAAIC,EAAYtE,EAAwBuE,KAAKF,EAAY7M,OACzD,OAAO0G,EAAW,CAACoG,GAAY,CAAEvF,KAAMsF,EAAYtF,OAIvD,SAASyF,EAAejK,GACpB,OAAOA,GAASA,EAAM2J,4BAO1B,SAASO,EAAYvF,GACjB,IAAInG,EAAOD,KAEPgB,EAAUf,EAAK2L,aAAa7J,MAAK,WACjC,IAAI2G,EAAY3B,EAAW9G,EAAK4L,QAAQrG,MAExC,GAAIkD,GAAaA,EAAUG,QACvB,OAAOH,EAAUG,WAKzB,OADAxC,EAAoBrF,EAASoF,EAAUA,GAChCpF,EAMX,SAAS8K,EAAcrD,GACnBD,EAAgBC,GAKhB,IAHA,IAAIC,EAAY3B,EAAW0B,EAAOjD,MAC9BuG,EAAUrD,EAAUqD,QAEf3O,EAAI,EAAGA,EAAI2O,EAAQtO,OAAQL,IAAK,CACrC,IAAI4O,EAASD,EAAQ3O,GACjB4O,EAAOH,QAAQxC,KACf2C,EAAOH,QAAQxC,GAAGC,QAClB0C,EAAOH,QAAQxC,GAAK,MAK5B,OAFAZ,EAAOY,GAAK,KAELc,EAAuB1B,GAAQ1G,MAAK,SAAUsH,GAEjD,OADAZ,EAAOY,GAAKA,EACRgB,EAAiB5B,GAEV2B,EAAuB3B,GAE3BY,KACRtH,MAAK,SAAUsH,GAGdZ,EAAOY,GAAKX,EAAUW,GAAKA,EAC3B,IAAK,IAAIjM,EAAI,EAAGA,EAAI2O,EAAQtO,OAAQL,IAChC2O,EAAQ3O,GAAGyO,QAAQxC,GAAKA,KAE7B,UAAS,SAAUJ,GAElB,MADAD,EAAiBP,EAAQQ,GACnBA,KAMd,SAASgD,EAAkBxD,EAAQyD,EAAM9F,EAAU+F,QAC/BC,IAAZD,IACAA,EAAU,GAGd,IACI,IAAIE,EAAK5D,EAAOY,GAAG1B,YAAYc,EAAOoB,UAAWqC,GACjD9F,EAAS,KAAMiG,GACjB,MAAOpD,GACL,GAAIkD,EAAU,KAAO1D,EAAOY,IAAmB,sBAAbJ,EAAIzD,MAA6C,kBAAbyD,EAAIzD,MACtE,OAAOU,EAAUtE,UAAUG,MAAK,WAC5B,IAAK0G,EAAOY,IAAmB,kBAAbJ,EAAIzD,OAA6BiD,EAAOY,GAAGmB,iBAAiBC,SAAShC,EAAOoB,YAAcpB,EAAOe,SAAWf,EAAOY,GAAGG,QAMpI,OAJIf,EAAOY,KACPZ,EAAOe,QAAUf,EAAOY,GAAGG,QAAU,GAGlCY,EAAuB3B,MAEnC1G,MAAK,WACJ,OAAO+J,EAAcrD,GAAQ1G,MAAK,WAC9BkK,EAAkBxD,EAAQyD,EAAM9F,EAAU+F,EAAU,SAEzD,SAAS/F,GAGhBA,EAAS6C,IAIjB,SAASG,IACL,MAAO,CAEH2C,QAAS,GAET1C,GAAI,KAEJR,QAAS,KAETD,mBAAoB,IAM5B,SAAS0D,EAAaC,GAClB,IAAItM,EAAOD,KACPyI,EAAS,CACTY,GAAI,MAGR,GAAIkD,EACA,IAAK,IAAInP,KAAKmP,EACV9D,EAAOrL,GAAKmP,EAAQnP,GAK5B,IAAIsL,EAAY3B,EAAW0B,EAAOjD,MAG7BkD,IACDA,EAAYU,IAEZrC,EAAW0B,EAAOjD,MAAQkD,GAI9BA,EAAUqD,QAAQhM,KAAKE,GAGlBA,EAAK2L,aACN3L,EAAK2L,WAAa3L,EAAKuM,MACvBvM,EAAKuM,MAAQb,GAIjB,IAAIc,EAAe,GAEnB,SAASC,IAGL,OAAOxG,EAAUtE,UAGrB,IAAK,IAAI+K,EAAI,EAAGA,EAAIjE,EAAUqD,QAAQtO,OAAQkP,IAAK,CAC/C,IAAIX,EAAStD,EAAUqD,QAAQY,GAC3BX,IAAW/L,GAEXwM,EAAa1M,KAAKiM,EAAOJ,aAAa,SAASc,IAKvD,IAAIX,EAAUrD,EAAUqD,QAAQa,MAAM,GAItC,OAAO1G,EAAUvD,IAAI8J,GAAc1K,MAAK,WAGpC,OAFA0G,EAAOY,GAAKX,EAAUW,GAEfc,EAAuB1B,MAC/B1G,MAAK,SAAUsH,GAEd,OADAZ,EAAOY,GAAKA,EACRgB,EAAiB5B,EAAQxI,EAAK4M,eAAerD,SAEtCY,EAAuB3B,GAE3BY,KACRtH,MAAK,SAAUsH,GACdZ,EAAOY,GAAKX,EAAUW,GAAKA,EAC3BpJ,EAAK4L,QAAUpD,EAEf,IAAK,IAAIqE,EAAI,EAAGA,EAAIf,EAAQtO,OAAQqP,IAAK,CACrC,IAAId,EAASD,EAAQe,GACjBd,IAAW/L,IAEX+L,EAAOH,QAAQxC,GAAKZ,EAAOY,GAC3B2C,EAAOH,QAAQrC,QAAUf,EAAOe,aAMhD,SAASuD,EAAQvG,EAAKJ,GAClB,IAAInG,EAAOD,KAEXwG,EAAMD,EAAaC,GAEnB,IAAIxF,EAAU,IAAIkF,GAAU,SAAUtE,EAASD,GAC3C1B,EAAKuM,QAAQzK,MAAK,WACdkK,EAAkBhM,EAAK4L,QAAS7E,GAAW,SAAUiC,EAAKtB,GACtD,GAAIsB,EACA,OAAOtH,EAAOsH,GAGlB,IACI,IAAI+D,EAAQrF,EAAYE,YAAY5H,EAAK4L,QAAQhC,WAC7CoD,EAAMD,EAAME,IAAI1G,GAEpByG,EAAI/C,UAAY,WACZ,IAAIzI,EAAQwL,EAAI3K,YACF8J,IAAV3K,IACAA,EAAQ,MAERiK,EAAejK,KACfA,EAAQ6J,EAAY7J,IAExBG,EAAQH,IAGZwL,EAAIhD,QAAU,WACVtI,EAAOsL,EAAI3J,QAEjB,MAAO3G,GACLgF,EAAOhF,UAGhB,SAASgF,MAIhB,OADAwE,EAAgBnF,EAASoF,GAClBpF,EAIX,SAASmM,EAAQrJ,EAAUsC,GACvB,IAAInG,EAAOD,KAEPgB,EAAU,IAAIkF,GAAU,SAAUtE,EAASD,GAC3C1B,EAAKuM,QAAQzK,MAAK,WACdkK,EAAkBhM,EAAK4L,QAAS7E,GAAW,SAAUiC,EAAKtB,GACtD,GAAIsB,EACA,OAAOtH,EAAOsH,GAGlB,IACI,IAAI+D,EAAQrF,EAAYE,YAAY5H,EAAK4L,QAAQhC,WAC7CoD,EAAMD,EAAMI,aACZC,EAAkB,EAEtBJ,EAAI/C,UAAY,WACZ,IAAIoD,EAASL,EAAI3K,OAEjB,GAAIgL,EAAQ,CACR,IAAI7L,EAAQ6L,EAAO7L,MACfiK,EAAejK,KACfA,EAAQ6J,EAAY7J,IAExB,IAAIa,EAASwB,EAASrC,EAAO6L,EAAO9G,IAAK6G,UAK1B,IAAX/K,EACAV,EAAQU,GAERgL,EAAO,mBAGX1L,KAIRqL,EAAIhD,QAAU,WACVtI,EAAOsL,EAAI3J,QAEjB,MAAO3G,GACLgF,EAAOhF,UAGhB,SAASgF,MAKhB,OAFAwE,EAAgBnF,EAASoF,GAElBpF,EAGX,SAASuM,EAAQ/G,EAAK/E,EAAO2E,GACzB,IAAInG,EAAOD,KAEXwG,EAAMD,EAAaC,GAEnB,IAAIxF,EAAU,IAAIkF,GAAU,SAAUtE,EAASD,GAC3C,IAAI8G,EACJxI,EAAKuM,QAAQzK,MAAK,WAEd,OADA0G,EAASxI,EAAK4L,QACe,kBAAzB9I,EAASvF,KAAKiE,GACP8G,EAAkBE,EAAOY,IAAItH,MAAK,SAAUyL,GAC/C,OAAIA,EACO/L,EAEJoJ,EAAYpJ,MAGpBA,KACRM,MAAK,SAAUN,GACdwK,EAAkBhM,EAAK4L,QAAS5E,GAAY,SAAUgC,EAAKtB,GACvD,GAAIsB,EACA,OAAOtH,EAAOsH,GAGlB,IACI,IAAI+D,EAAQrF,EAAYE,YAAY5H,EAAK4L,QAAQhC,WAMnC,OAAVpI,IACAA,OAAQ2K,GAGZ,IAAIa,EAAMD,EAAMlF,IAAIrG,EAAO+E,GAE3BmB,EAAYO,WAAa,gBAOPkE,IAAV3K,IACAA,EAAQ,MAGZG,EAAQH,IAEZkG,EAAYI,QAAUJ,EAAYsC,QAAU,WACxC,IAAIhB,EAAMgE,EAAI3J,MAAQ2J,EAAI3J,MAAQ2J,EAAItF,YAAYrE,MAClD3B,EAAOsH,IAEb,MAAOtM,GACLgF,EAAOhF,UAGhB,SAASgF,MAIhB,OADAwE,EAAgBnF,EAASoF,GAClBpF,EAGX,SAASyM,EAAWjH,EAAKJ,GACrB,IAAInG,EAAOD,KAEXwG,EAAMD,EAAaC,GAEnB,IAAIxF,EAAU,IAAIkF,GAAU,SAAUtE,EAASD,GAC3C1B,EAAKuM,QAAQzK,MAAK,WACdkK,EAAkBhM,EAAK4L,QAAS5E,GAAY,SAAUgC,EAAKtB,GACvD,GAAIsB,EACA,OAAOtH,EAAOsH,GAGlB,IACI,IAAI+D,EAAQrF,EAAYE,YAAY5H,EAAK4L,QAAQhC,WAM7CoD,EAAMD,EAAM,UAAUxG,GAC1BmB,EAAYO,WAAa,WACrBtG,KAGJ+F,EAAYsC,QAAU,WAClBtI,EAAOsL,EAAI3J,QAKfqE,EAAYI,QAAU,WAClB,IAAIkB,EAAMgE,EAAI3J,MAAQ2J,EAAI3J,MAAQ2J,EAAItF,YAAYrE,MAClD3B,EAAOsH,IAEb,MAAOtM,GACLgF,EAAOhF,UAGhB,SAASgF,MAIhB,OADAwE,EAAgBnF,EAASoF,GAClBpF,EAGX,SAAS0M,EAAMtH,GACX,IAAInG,EAAOD,KAEPgB,EAAU,IAAIkF,GAAU,SAAUtE,EAASD,GAC3C1B,EAAKuM,QAAQzK,MAAK,WACdkK,EAAkBhM,EAAK4L,QAAS5E,GAAY,SAAUgC,EAAKtB,GACvD,GAAIsB,EACA,OAAOtH,EAAOsH,GAGlB,IACI,IAAI+D,EAAQrF,EAAYE,YAAY5H,EAAK4L,QAAQhC,WAC7CoD,EAAMD,EAAMU,QAEhB/F,EAAYO,WAAa,WACrBtG,KAGJ+F,EAAYI,QAAUJ,EAAYsC,QAAU,WACxC,IAAIhB,EAAMgE,EAAI3J,MAAQ2J,EAAI3J,MAAQ2J,EAAItF,YAAYrE,MAClD3B,EAAOsH,IAEb,MAAOtM,GACLgF,EAAOhF,UAGhB,SAASgF,MAIhB,OADAwE,EAAgBnF,EAASoF,GAClBpF,EAGX,SAASvD,EAAO2I,GACZ,IAAInG,EAAOD,KAEPgB,EAAU,IAAIkF,GAAU,SAAUtE,EAASD,GAC3C1B,EAAKuM,QAAQzK,MAAK,WACdkK,EAAkBhM,EAAK4L,QAAS7E,GAAW,SAAUiC,EAAKtB,GACtD,GAAIsB,EACA,OAAOtH,EAAOsH,GAGlB,IACI,IAAI+D,EAAQrF,EAAYE,YAAY5H,EAAK4L,QAAQhC,WAC7CoD,EAAMD,EAAMW,QAEhBV,EAAI/C,UAAY,WACZtI,EAAQqL,EAAI3K,SAGhB2K,EAAIhD,QAAU,WACVtI,EAAOsL,EAAI3J,QAEjB,MAAO3G,GACLgF,EAAOhF,UAGhB,SAASgF,MAIhB,OADAwE,EAAgBnF,EAASoF,GAClBpF,EAGX,SAASwF,EAAI3J,EAAGuJ,GACZ,IAAInG,EAAOD,KAEPgB,EAAU,IAAIkF,GAAU,SAAUtE,EAASD,GACvC9E,EAAI,EACJ+E,EAAQ,MAKZ3B,EAAKuM,QAAQzK,MAAK,WACdkK,EAAkBhM,EAAK4L,QAAS7E,GAAW,SAAUiC,EAAKtB,GACtD,GAAIsB,EACA,OAAOtH,EAAOsH,GAGlB,IACI,IAAI+D,EAAQrF,EAAYE,YAAY5H,EAAK4L,QAAQhC,WAC7C+D,GAAW,EACXX,EAAMD,EAAMI,aAEhBH,EAAI/C,UAAY,WACZ,IAAIoD,EAASL,EAAI3K,OACZgL,EAOK,IAANzQ,EAGA+E,EAAQ0L,EAAO9G,KAEVoH,EAODhM,EAAQ0L,EAAO9G,MAJfoH,GAAW,EACXN,EAAOO,QAAQhR,IAdnB+E,EAAQ,OAsBhBqL,EAAIhD,QAAU,WACVtI,EAAOsL,EAAI3J,QAEjB,MAAO3G,GACLgF,EAAOhF,UAGhB,SAASgF,MAIhB,OADAwE,EAAgBnF,EAASoF,GAClBpF,EAGX,SAAS8M,EAAK1H,GACV,IAAInG,EAAOD,KAEPgB,EAAU,IAAIkF,GAAU,SAAUtE,EAASD,GAC3C1B,EAAKuM,QAAQzK,MAAK,WACdkK,EAAkBhM,EAAK4L,QAAS7E,GAAW,SAAUiC,EAAKtB,GACtD,GAAIsB,EACA,OAAOtH,EAAOsH,GAGlB,IACI,IAAI+D,EAAQrF,EAAYE,YAAY5H,EAAK4L,QAAQhC,WAC7CoD,EAAMD,EAAMI,aACZU,EAAO,GAEXb,EAAI/C,UAAY,WACZ,IAAIoD,EAASL,EAAI3K,OAEZgL,GAKLQ,EAAK/N,KAAKuN,EAAO9G,KACjB8G,EAAO,eALH1L,EAAQkM,IAQhBb,EAAIhD,QAAU,WACVtI,EAAOsL,EAAI3J,QAEjB,MAAO3G,GACLgF,EAAOhF,UAGhB,SAASgF,MAIhB,OADAwE,EAAgBnF,EAASoF,GAClBpF,EAGX,SAAS+M,EAAaxB,EAASnG,GAC3BA,EAAWQ,EAAY5E,MAAMhC,KAAMiC,WAEnC,IAAI+L,EAAgBhO,KAAKiO,SACzB1B,EAA6B,oBAAZA,GAA0BA,GAAW,GACjDA,EAAQ/G,OACT+G,EAAQ/G,KAAO+G,EAAQ/G,MAAQwI,EAAcxI,KAC7C+G,EAAQ1C,UAAY0C,EAAQ1C,WAAamE,EAAcnE,WAG3D,IACI7I,EADAf,EAAOD,KAEX,GAAKuM,EAAQ/G,KAEN,CACH,IAAI0I,EAAc3B,EAAQ/G,OAASwI,EAAcxI,MAAQvF,EAAK4L,QAAQxC,GAElE8E,EAAYD,EAAchI,EAAUtE,QAAQ3B,EAAK4L,QAAQxC,IAAMc,EAAuBoC,GAASxK,MAAK,SAAUsH,GAC9G,IAAIX,EAAY3B,EAAWwF,EAAQ/G,MAC/BuG,EAAUrD,EAAUqD,QACxBrD,EAAUW,GAAKA,EACf,IAAK,IAAIjM,EAAI,EAAGA,EAAI2O,EAAQtO,OAAQL,IAChC2O,EAAQ3O,GAAGyO,QAAQxC,GAAKA,EAE5B,OAAOA,KAgDPrI,EA7CCuL,EAAQ1C,UA6CCsE,EAAUpM,MAAK,SAAUsH,GAC/B,GAAKA,EAAGmB,iBAAiBC,SAAS8B,EAAQ1C,WAA1C,CAIA,IAAIG,EAAaX,EAAGG,QAAU,EAE9BhB,EAAgB+D,GAEhB,IAAI7D,EAAY3B,EAAWwF,EAAQ/G,MAC/BuG,EAAUrD,EAAUqD,QAExB1C,EAAGC,QACH,IAAK,IAAIlM,EAAI,EAAGA,EAAI2O,EAAQtO,OAAQL,IAAK,CACrC,IAAI4O,EAASD,EAAQ3O,GACrB4O,EAAOH,QAAQxC,GAAK,KACpB2C,EAAOH,QAAQrC,QAAUQ,EAG7B,IAAIoE,EAAoB,IAAIlI,GAAU,SAAUtE,EAASD,GACrD,IAAIsL,EAAMzI,EAAIkF,KAAK6C,EAAQ/G,KAAMwE,GAEjCiD,EAAIhD,QAAU,SAAUhB,GACpB,IAAII,EAAK4D,EAAI3K,OACb+G,EAAGC,QACH3H,EAAOsH,IAGXgE,EAAItD,gBAAkB,WAClB,IAAIN,EAAK4D,EAAI3K,OACb+G,EAAGgF,kBAAkB9B,EAAQ1C,YAGjCoD,EAAI/C,UAAY,WACZ,IAAIb,EAAK4D,EAAI3K,OACb+G,EAAGC,QACH1H,EAAQyH,OAIhB,OAAO+E,EAAkBrM,MAAK,SAAUsH,GACpCX,EAAUW,GAAKA,EACf,IAAK,IAAIsD,EAAI,EAAGA,EAAIZ,EAAQtO,OAAQkP,IAAK,CACrC,IAAI2B,EAAWvC,EAAQY,GACvB2B,EAASzC,QAAQxC,GAAKA,EACtBP,EAAkBwF,EAASzC,aAEhC,UAAS,SAAU5C,GAElB,MADCD,EAAiBuD,EAAStD,IAAQ/C,EAAUtE,WAAW,UAAS,eAC3DqH,SA7FJkF,EAAUpM,MAAK,SAAUsH,GAC/Bb,EAAgB+D,GAEhB,IAAI7D,EAAY3B,EAAWwF,EAAQ/G,MAC/BuG,EAAUrD,EAAUqD,QAExB1C,EAAGC,QACH,IAAK,IAAIlM,EAAI,EAAGA,EAAI2O,EAAQtO,OAAQL,IAAK,CACrC,IAAI4O,EAASD,EAAQ3O,GACrB4O,EAAOH,QAAQxC,GAAK,KAGxB,IAAIkF,EAAgB,IAAIrI,GAAU,SAAUtE,EAASD,GACjD,IAAIsL,EAAMzI,EAAIgK,eAAejC,EAAQ/G,MAErCyH,EAAIhD,QAAUgD,EAAIwB,UAAY,SAAUxF,GACpC,IAAII,EAAK4D,EAAI3K,OACT+G,GACAA,EAAGC,QAEP3H,EAAOsH,IAGXgE,EAAI/C,UAAY,WACZ,IAAIb,EAAK4D,EAAI3K,OACT+G,GACAA,EAAGC,QAEP1H,EAAQyH,OAIhB,OAAOkF,EAAcxM,MAAK,SAAUsH,GAChCX,EAAUW,GAAKA,EACf,IAAK,IAAIjM,EAAI,EAAGA,EAAI2O,EAAQtO,OAAQL,IAAK,CACrC,IAAIsR,EAAU3C,EAAQ3O,GACtB0L,EAAkB4F,EAAQ7C,aAE/B,UAAS,SAAU5C,GAElB,MADCD,EAAiBuD,EAAStD,IAAQ/C,EAAUtE,WAAW,UAAS,eAC3DqH,aAvDlBjI,EAAUkF,EAAUvE,OAAO,qBAmH/B,OADAwE,EAAgBnF,EAASoF,GAClBpF,EAGX,IAAI2N,EAAe,CACfC,QAAS,eACTtC,aAAcA,EACduC,SAAUpK,IACV0I,QAASA,EACTJ,QAASA,EACTQ,QAASA,EACTE,WAAYA,EACZC,MAAOA,EACPjQ,OAAQA,EACR+I,IAAKA,EACLsH,KAAMA,EACNC,aAAcA,GAGlB,SAASe,IACL,MAA+B,oBAAjBnK,aAMlB,IAAIoK,EAAa,mEAEbC,EAAmB,uBACnBC,EAAyB,gCAEzBC,EAAoB,YACpBC,EAA2BD,EAAkBzR,OAG7C2R,GAAmB,OACnBC,GAAY,OACZC,GAAiB,OACjBC,GAAkB,OAClBC,GAAyB,OACzBC,GAAkB,OAClBC,GAAkB,OAClBC,GAAmB,OACnBC,GAAmB,OACnBC,GAAoB,OACpBC,GAAoB,OACpBC,GAAgCZ,EAA2BC,GAAiB3R,OAE5EuS,GAAanN,OAAOC,UAAUC,SAElC,SAASkN,GAAeC,GAEpB,IAEI9S,EAEA+S,EAAUC,EAAUC,EAAUC,EAJ9BC,EAAyC,IAA1BL,EAAiBzS,OAChCmC,EAAMsQ,EAAiBzS,OAEvB+S,EAAI,EAG8C,MAAlDN,EAAiBA,EAAiBzS,OAAS,KAC3C8S,IACsD,MAAlDL,EAAiBA,EAAiBzS,OAAS,IAC3C8S,KAIR,IAAIE,EAAS,IAAIpJ,YAAYkJ,GACzBG,EAAQ,IAAInJ,WAAWkJ,GAE3B,IAAKrT,EAAI,EAAGA,EAAIwC,EAAKxC,GAAK,EACtB+S,EAAWpB,EAAW7J,QAAQgL,EAAiB9S,IAC/CgT,EAAWrB,EAAW7J,QAAQgL,EAAiB9S,EAAI,IACnDiT,EAAWtB,EAAW7J,QAAQgL,EAAiB9S,EAAI,IACnDkT,EAAWvB,EAAW7J,QAAQgL,EAAiB9S,EAAI,IAGnDsT,EAAMF,KAAOL,GAAY,EAAIC,GAAY,EACzCM,EAAMF,MAAmB,GAAXJ,IAAkB,EAAIC,GAAY,EAChDK,EAAMF,MAAmB,EAAXH,IAAiB,EAAe,GAAXC,EAEvC,OAAOG,EAKX,SAASE,GAAeF,GAEpB,IAEIrT,EAFAsT,EAAQ,IAAInJ,WAAWkJ,GACvBG,EAAe,GAGnB,IAAKxT,EAAI,EAAGA,EAAIsT,EAAMjT,OAAQL,GAAK,EAE/BwT,GAAgB7B,EAAW2B,EAAMtT,IAAM,GACvCwT,GAAgB7B,GAAuB,EAAX2B,EAAMtT,KAAW,EAAIsT,EAAMtT,EAAI,IAAM,GACjEwT,GAAgB7B,GAA2B,GAAf2B,EAAMtT,EAAI,KAAY,EAAIsT,EAAMtT,EAAI,IAAM,GACtEwT,GAAgB7B,EAA0B,GAAf2B,EAAMtT,EAAI,IASzC,OANIsT,EAAMjT,OAAS,IAAM,EACrBmT,EAAeA,EAAaC,UAAU,EAAGD,EAAanT,OAAS,GAAK,IAC7DiT,EAAMjT,OAAS,IAAM,IAC5BmT,EAAeA,EAAaC,UAAU,EAAGD,EAAanT,OAAS,GAAK,MAGjEmT,EAMX,SAASE,GAAUrP,EAAO2E,GACtB,IAAI2K,EAAY,GAShB,GARItP,IACAsP,EAAYf,GAAWxS,KAAKiE,IAO5BA,IAAwB,yBAAdsP,GAAwCtP,EAAMgP,QAA4C,yBAAlCT,GAAWxS,KAAKiE,EAAMgP,SAAqC,CAG7H,IAAIA,EACAO,EAAS9B,EAETzN,aAAiB4F,aACjBoJ,EAAShP,EACTuP,GAAU5B,KAEVqB,EAAShP,EAAMgP,OAEG,uBAAdM,EACAC,GAAU1B,GACW,wBAAdyB,EACPC,GAAUzB,GACW,+BAAdwB,EACPC,GAAUxB,GACW,wBAAduB,EACPC,GAAUvB,GACW,yBAAdsB,EACPC,GAAUrB,GACW,wBAAdoB,EACPC,GAAUtB,GACW,yBAAdqB,EACPC,GAAUpB,GACW,0BAAdmB,EACPC,GAAUnB,GACW,0BAAdkB,EACPC,GAAUlB,GAEV1J,EAAS,IAAI/I,MAAM,wCAI3B+I,EAAS4K,EAASL,GAAeF,SAC9B,GAAkB,kBAAdM,EAA+B,CAEtC,IAAIE,EAAa,IAAIlG,WAErBkG,EAAWC,OAAS,WAEhB,IAAIC,EAAMnC,EAAmBvN,EAAMwE,KAAO,IAAM0K,GAAe3Q,KAAKsC,QAEpE8D,EAAS8I,EAAoBG,GAAY8B,IAG7CF,EAAWG,kBAAkB3P,QAE7B,IACI2E,EAASiL,KAAKC,UAAU7P,IAC1B,MAAO9E,GACL8J,QAAQnD,MAAM,8CAA+C7B,GAE7D2E,EAAS,KAAMzJ,IAa3B,SAAS4U,GAAY9P,GAIjB,GAAIA,EAAMoP,UAAU,EAAG1B,KAA8BD,EACjD,OAAOmC,KAAKG,MAAM/P,GAMtB,IAGIgQ,EAHAvB,EAAmBzO,EAAMoP,UAAUd,IACnC9J,EAAOxE,EAAMoP,UAAU1B,EAA0BY,IAKrD,GAAI9J,IAASoJ,IAAaJ,EAAuBrK,KAAKsL,GAAmB,CACrE,IAAIwB,EAAUxB,EAAiB9H,MAAM6G,GACrCwC,EAAWC,EAAQ,GACnBxB,EAAmBA,EAAiBW,UAAUa,EAAQ,GAAGjU,QAE7D,IAAIgT,EAASR,GAAeC,GAI5B,OAAQjK,GACJ,KAAKmJ,GACD,OAAOqB,EACX,KAAKpB,GACD,OAAOjK,EAAW,CAACqL,GAAS,CAAExK,KAAMwL,IACxC,KAAKnC,GACD,OAAO,IAAIqC,UAAUlB,GACzB,KAAKlB,GACD,OAAO,IAAIhI,WAAWkJ,GAC1B,KAAKjB,GACD,OAAO,IAAIoC,kBAAkBnB,GACjC,KAAKhB,GACD,OAAO,IAAIoC,WAAWpB,GAC1B,KAAKd,GACD,OAAO,IAAImC,YAAYrB,GAC3B,KAAKf,GACD,OAAO,IAAIqC,WAAWtB,GAC1B,KAAKb,GACD,OAAO,IAAIoC,YAAYvB,GAC3B,KAAKZ,GACD,OAAO,IAAIoC,aAAaxB,GAC5B,KAAKX,GACD,OAAO,IAAIoC,aAAazB,GAC5B,QACI,MAAM,IAAIpT,MAAM,gBAAkB4I,IAI9C,IAAIkM,GAAwB,CACxBrB,UAAWA,GACXS,YAAaA,GACbtB,eAAgBA,GAChBU,eAAgBA,IAapB,SAASyB,GAAcxV,EAAG6L,EAAQrC,EAAUE,GACxC1J,EAAEyV,WAAW,8BAAgC5J,EAAOoB,UAAY,+CAAqD,GAAIzD,EAAUE,GAKvI,SAASgM,GAAe/F,GACpB,IAAItM,EAAOD,KACPyI,EAAS,CACTY,GAAI,MAGR,GAAIkD,EACA,IAAK,IAAInP,KAAKmP,EACV9D,EAAOrL,GAA2B,kBAAfmP,EAAQnP,GAAkBmP,EAAQnP,GAAG2F,WAAawJ,EAAQnP,GAIrF,IAAImV,EAAgB,IAAIrM,GAAU,SAAUtE,EAASD,GAGjD,IACI8G,EAAOY,GAAK1E,aAAa8D,EAAOjD,KAAMmB,OAAO8B,EAAOe,SAAUf,EAAO+J,YAAa/J,EAAOgK,MAC3F,MAAO9V,GACL,OAAOgF,EAAOhF,GAIlB8L,EAAOY,GAAG1B,aAAY,SAAU/K,GAC5BwV,GAAcxV,EAAG6L,GAAQ,WACrBxI,EAAK4L,QAAUpD,EACf7G,OACD,SAAUhF,EAAG0G,GACZ3B,EAAO2B,QAEZ3B,MAIP,OADA8G,EAAOiK,WAAaP,GACbI,EAGX,SAASI,GAAc/V,EAAG6L,EAAQmK,EAAcC,EAAMzM,EAAUE,GAC5D1J,EAAEyV,WAAWO,EAAcC,EAAMzM,GAAU,SAAUxJ,EAAG0G,GAChDA,EAAMhG,OAASgG,EAAMwP,WACrBlW,EAAEyV,WAAW,iEAAuE,CAAC5J,EAAOoB,YAAY,SAAUjN,EAAGmW,GAC5GA,EAAQC,KAAKvV,OAOd6I,EAAc1J,EAAG0G,GAJjB8O,GAAcxV,EAAG6L,GAAQ,WACrB7L,EAAEyV,WAAWO,EAAcC,EAAMzM,EAAUE,KAC5CA,KAIRA,GAEHA,EAAc1J,EAAG0G,KAEtBgD,GAGP,SAAS2M,GAAUzM,EAAKJ,GACpB,IAAInG,EAAOD,KAEXwG,EAAMD,EAAaC,GAEnB,IAAIxF,EAAU,IAAIkF,GAAU,SAAUtE,EAASD,GAC3C1B,EAAKuM,QAAQzK,MAAK,WACd,IAAI0G,EAASxI,EAAK4L,QAClBpD,EAAOY,GAAG1B,aAAY,SAAU/K,GAC5B+V,GAAc/V,EAAG6L,EAAQ,iBAAmBA,EAAOoB,UAAY,yBAA0B,CAACrD,IAAM,SAAU5J,EAAGmW,GACzG,IAAIzQ,EAASyQ,EAAQC,KAAKvV,OAASsV,EAAQC,KAAKE,KAAK,GAAGzR,MAAQ,KAI5Da,IACAA,EAASmG,EAAOiK,WAAWnB,YAAYjP,IAG3CV,EAAQU,MACT,SAAU1F,EAAG0G,GACZ3B,EAAO2B,YAGhB,SAAS3B,MAIhB,OADAwE,EAAgBnF,EAASoF,GAClBpF,EAGX,SAASmS,GAAUrP,EAAUsC,GACzB,IAAInG,EAAOD,KAEPgB,EAAU,IAAIkF,GAAU,SAAUtE,EAASD,GAC3C1B,EAAKuM,QAAQzK,MAAK,WACd,IAAI0G,EAASxI,EAAK4L,QAElBpD,EAAOY,GAAG1B,aAAY,SAAU/K,GAC5B+V,GAAc/V,EAAG6L,EAAQ,iBAAmBA,EAAOoB,UAAW,IAAI,SAAUjN,EAAGmW,GAI3E,IAHA,IAAIC,EAAOD,EAAQC,KACfvV,EAASuV,EAAKvV,OAETL,EAAI,EAAGA,EAAIK,EAAQL,IAAK,CAC7B,IAAI8V,EAAOF,EAAKE,KAAK9V,GACjBkF,EAAS4Q,EAAKzR,MAYlB,GARIa,IACAA,EAASmG,EAAOiK,WAAWnB,YAAYjP,IAG3CA,EAASwB,EAASxB,EAAQ4Q,EAAK1M,IAAKpJ,EAAI,QAIzB,IAAXkF,EAEA,YADAV,EAAQU,GAKhBV,OACD,SAAUhF,EAAG0G,GACZ3B,EAAO2B,YAGhB,SAAS3B,MAIhB,OADAwE,EAAgBnF,EAASoF,GAClBpF,EAGX,SAASoS,GAAS5M,EAAK/E,EAAO2E,EAAUiN,GACpC,IAAIpT,EAAOD,KAEXwG,EAAMD,EAAaC,GAEnB,IAAIxF,EAAU,IAAIkF,GAAU,SAAUtE,EAASD,GAC3C1B,EAAKuM,QAAQzK,MAAK,gBAIAqK,IAAV3K,IACAA,EAAQ,MAIZ,IAAI6R,EAAgB7R,EAEhBgH,EAASxI,EAAK4L,QAClBpD,EAAOiK,WAAW5B,UAAUrP,GAAO,SAAUA,EAAO6B,GAC5CA,EACA3B,EAAO2B,GAEPmF,EAAOY,GAAG1B,aAAY,SAAU/K,GAC5B+V,GAAc/V,EAAG6L,EAAQ,0BAA4BA,EAAOoB,UAAY,8BAAoC,CAACrD,EAAK/E,IAAQ,WACtHG,EAAQ0R,MACT,SAAU1W,EAAG0G,GACZ3B,EAAO2B,SAEZ,SAAUiQ,GAGT,GAAIA,EAASjW,OAASiW,EAASC,UAAW,CAQtC,GAAIH,EAAc,EAEd,YADAzR,EAAQwR,GAASpR,MAAM/B,EAAM,CAACuG,EAAK8M,EAAelN,EAAUiN,EAAc,KAG9E1R,EAAO4R,aAKxB,SAAS5R,MAIhB,OADAwE,EAAgBnF,EAASoF,GAClBpF,EAGX,SAASyS,GAAUjN,EAAK/E,EAAO2E,GAC3B,OAAOgN,GAASpR,MAAMhC,KAAM,CAACwG,EAAK/E,EAAO2E,EAAU,IAGvD,SAASsN,GAAalN,EAAKJ,GACvB,IAAInG,EAAOD,KAEXwG,EAAMD,EAAaC,GAEnB,IAAIxF,EAAU,IAAIkF,GAAU,SAAUtE,EAASD,GAC3C1B,EAAKuM,QAAQzK,MAAK,WACd,IAAI0G,EAASxI,EAAK4L,QAClBpD,EAAOY,GAAG1B,aAAY,SAAU/K,GAC5B+V,GAAc/V,EAAG6L,EAAQ,eAAiBA,EAAOoB,UAAY,iBAAkB,CAACrD,IAAM,WAClF5E,OACD,SAAUhF,EAAG0G,GACZ3B,EAAO2B,YAGhB,SAAS3B,MAIhB,OADAwE,EAAgBnF,EAASoF,GAClBpF,EAKX,SAAS2S,GAAQvN,GACb,IAAInG,EAAOD,KAEPgB,EAAU,IAAIkF,GAAU,SAAUtE,EAASD,GAC3C1B,EAAKuM,QAAQzK,MAAK,WACd,IAAI0G,EAASxI,EAAK4L,QAClBpD,EAAOY,GAAG1B,aAAY,SAAU/K,GAC5B+V,GAAc/V,EAAG6L,EAAQ,eAAiBA,EAAOoB,UAAW,IAAI,WAC5DjI,OACD,SAAUhF,EAAG0G,GACZ3B,EAAO2B,YAGhB,SAAS3B,MAIhB,OADAwE,EAAgBnF,EAASoF,GAClBpF,EAKX,SAAS4S,GAASxN,GACd,IAAInG,EAAOD,KAEPgB,EAAU,IAAIkF,GAAU,SAAUtE,EAASD,GAC3C1B,EAAKuM,QAAQzK,MAAK,WACd,IAAI0G,EAASxI,EAAK4L,QAClBpD,EAAOY,GAAG1B,aAAY,SAAU/K,GAE5B+V,GAAc/V,EAAG6L,EAAQ,+BAAiCA,EAAOoB,UAAW,IAAI,SAAUjN,EAAGmW,GACzF,IAAIzQ,EAASyQ,EAAQC,KAAKE,KAAK,GAAGW,EAClCjS,EAAQU,MACT,SAAU1F,EAAG0G,GACZ3B,EAAO2B,YAGhB,SAAS3B,MAIhB,OADAwE,EAAgBnF,EAASoF,GAClBpF,EAUX,SAAS8S,GAAMjX,EAAGuJ,GACd,IAAInG,EAAOD,KAEPgB,EAAU,IAAIkF,GAAU,SAAUtE,EAASD,GAC3C1B,EAAKuM,QAAQzK,MAAK,WACd,IAAI0G,EAASxI,EAAK4L,QAClBpD,EAAOY,GAAG1B,aAAY,SAAU/K,GAC5B+V,GAAc/V,EAAG6L,EAAQ,mBAAqBA,EAAOoB,UAAY,wBAAyB,CAAChN,EAAI,IAAI,SAAUD,EAAGmW,GAC5G,IAAIzQ,EAASyQ,EAAQC,KAAKvV,OAASsV,EAAQC,KAAKE,KAAK,GAAG1M,IAAM,KAC9D5E,EAAQU,MACT,SAAU1F,EAAG0G,GACZ3B,EAAO2B,YAGhB,SAAS3B,MAIhB,OADAwE,EAAgBnF,EAASoF,GAClBpF,EAGX,SAAS+S,GAAO3N,GACZ,IAAInG,EAAOD,KAEPgB,EAAU,IAAIkF,GAAU,SAAUtE,EAASD,GAC3C1B,EAAKuM,QAAQzK,MAAK,WACd,IAAI0G,EAASxI,EAAK4L,QAClBpD,EAAOY,GAAG1B,aAAY,SAAU/K,GAC5B+V,GAAc/V,EAAG6L,EAAQ,mBAAqBA,EAAOoB,UAAW,IAAI,SAAUjN,EAAGmW,GAG7E,IAFA,IAAIjF,EAAO,GAEF1Q,EAAI,EAAGA,EAAI2V,EAAQC,KAAKvV,OAAQL,IACrC0Q,EAAK/N,KAAKgT,EAAQC,KAAKE,KAAK9V,GAAGoJ,KAGnC5E,EAAQkM,MACT,SAAUlR,EAAG0G,GACZ3B,EAAO2B,YAGhB,SAAS3B,MAIhB,OADAwE,EAAgBnF,EAASoF,GAClBpF,EAKX,SAASgT,GAAiB3K,GACtB,OAAO,IAAInD,GAAU,SAAUtE,EAASD,GACpC0H,EAAG1B,aAAY,SAAU/K,GACrBA,EAAEyV,WAAW,8FAAoG,IAAI,SAAUzV,EAAGmW,GAG9H,IAFA,IAAIkB,EAAa,GAER7W,EAAI,EAAGA,EAAI2V,EAAQC,KAAKvV,OAAQL,IACrC6W,EAAWlU,KAAKgT,EAAQC,KAAKE,KAAK9V,GAAGoI,MAGzC5D,EAAQ,CACJyH,GAAIA,EACJ4K,WAAYA,OAEjB,SAAUrX,EAAG0G,GACZ3B,EAAO2B,SAEZ,SAAUiQ,GACT5R,EAAO4R,SAKnB,SAASW,GAAe3H,EAASnG,GAC7BA,EAAWQ,EAAY5E,MAAMhC,KAAMiC,WAEnC,IAAI+L,EAAgBhO,KAAKiO,SACzB1B,EAA6B,oBAAZA,GAA0BA,GAAW,GACjDA,EAAQ/G,OACT+G,EAAQ/G,KAAO+G,EAAQ/G,MAAQwI,EAAcxI,KAC7C+G,EAAQ1C,UAAY0C,EAAQ1C,WAAamE,EAAcnE,WAG3D,IACI7I,EADAf,EAAOD,KAsDX,OAjDIgB,EAHCuL,EAAQ/G,KAGC,IAAIU,GAAU,SAAUtE,GAC9B,IAAIyH,EAGAA,EAFAkD,EAAQ/G,OAASwI,EAAcxI,KAE1BvF,EAAK4L,QAAQxC,GAEb1E,aAAa4H,EAAQ/G,KAAM,GAAI,GAAI,GAGvC+G,EAAQ1C,UAITjI,EAAQ,CACJyH,GAAIA,EACJ4K,WAAY,CAAC1H,EAAQ1C,aAJzBjI,EAAQoS,GAAiB3K,OAO9BtH,MAAK,SAAUoS,GACd,OAAO,IAAIjO,GAAU,SAAUtE,EAASD,GACpCwS,EAAc9K,GAAG1B,aAAY,SAAU/K,GACnC,SAASwX,EAAUvK,GACf,OAAO,IAAI3D,GAAU,SAAUtE,EAASD,GACpC/E,EAAEyV,WAAW,wBAA0BxI,EAAW,IAAI,WAClDjI,OACD,SAAUhF,EAAG0G,GACZ3B,EAAO2B,SAMnB,IADA,IAAI+Q,EAAa,GACRjX,EAAI,EAAGwC,EAAMuU,EAAcF,WAAWxW,OAAQL,EAAIwC,EAAKxC,IAC5DiX,EAAWtU,KAAKqU,EAAUD,EAAcF,WAAW7W,KAGvD8I,EAAUvD,IAAI0R,GAAYtS,MAAK,WAC3BH,OACD,UAAS,SAAUjF,GAClBgF,EAAOhF,SAEZ,SAAU4W,GACT5R,EAAO4R,YA5CTrN,EAAUvE,OAAO,qBAkD/BwE,EAAgBnF,EAASoF,GAClBpF,EAGX,IAAIsT,GAAgB,CAChB1F,QAAS,gBACTtC,aAAcgG,GACdzD,SAAUC,IACV3B,QAASgG,GACTpG,QAASkG,GACT1F,QAASkG,GACThG,WAAYiG,GACZhG,MAAOiG,GACPlW,OAAQmW,GACRpN,IAAKsN,GACLhG,KAAMiG,GACNhG,aAAcmG,IAGlB,SAASK,KACL,IACI,MAA+B,qBAAjBC,cAAgC,YAAaA,gBAEzDA,aAAajH,QACjB,MAAO5Q,GACL,OAAO,GAIf,SAAS8X,GAAclI,EAASmI,GAC5B,IAAIC,EAAYpI,EAAQ/G,KAAO,IAK/B,OAHI+G,EAAQ1C,YAAc6K,EAAc7K,YACpC8K,GAAapI,EAAQ1C,UAAY,KAE9B8K,EAIX,SAASC,KACL,IAAIC,EAAsB,4BAE1B,IAII,OAHAL,aAAajH,QAAQsH,GAAqB,GAC1CL,aAAa/G,WAAWoH,IAEjB,EACT,MAAOlY,GACL,OAAO,GAQf,SAASmY,KACL,OAAQF,MAA+BJ,aAAa/W,OAAS,EAIjE,SAASsX,GAAexI,GACpB,IAAItM,EAAOD,KACPyI,EAAS,GACb,GAAI8D,EACA,IAAK,IAAInP,KAAKmP,EACV9D,EAAOrL,GAAKmP,EAAQnP,GAM5B,OAFAqL,EAAOkM,UAAYF,GAAclI,EAAStM,EAAK4M,gBAE1CiI,MAIL7U,EAAK4L,QAAUpD,EACfA,EAAOiK,WAAaP,GAEbjM,EAAUtE,WANNsE,EAAUvE,SAWzB,SAASqT,GAAQ5O,GACb,IAAInG,EAAOD,KACPgB,EAAUf,EAAKuM,QAAQzK,MAAK,WAG5B,IAFA,IAAI4S,EAAY1U,EAAK4L,QAAQ8I,UAEpBvX,EAAIoX,aAAa/W,OAAS,EAAGL,GAAK,EAAGA,IAAK,CAC/C,IAAIoJ,EAAMgO,aAAahO,IAAIpJ,GAEI,IAA3BoJ,EAAItB,QAAQyP,IACZH,aAAa/G,WAAWjH,OAMpC,OADAL,EAAgBnF,EAASoF,GAClBpF,EAMX,SAASiU,GAAUzO,EAAKJ,GACpB,IAAInG,EAAOD,KAEXwG,EAAMD,EAAaC,GAEnB,IAAIxF,EAAUf,EAAKuM,QAAQzK,MAAK,WAC5B,IAAI0G,EAASxI,EAAK4L,QACdvJ,EAASkS,aAAazH,QAAQtE,EAAOkM,UAAYnO,GAUrD,OAJIlE,IACAA,EAASmG,EAAOiK,WAAWnB,YAAYjP,IAGpCA,KAIX,OADA6D,EAAgBnF,EAASoF,GAClBpF,EAIX,SAASkU,GAAUpR,EAAUsC,GACzB,IAAInG,EAAOD,KAEPgB,EAAUf,EAAKuM,QAAQzK,MAAK,WAc5B,IAbA,IAAI0G,EAASxI,EAAK4L,QACd8I,EAAYlM,EAAOkM,UACnBQ,EAAkBR,EAAUlX,OAC5BA,EAAS+W,aAAa/W,OAQtB4P,EAAkB,EAEbjQ,EAAI,EAAGA,EAAIK,EAAQL,IAAK,CAC7B,IAAIoJ,EAAMgO,aAAahO,IAAIpJ,GAC3B,GAA+B,IAA3BoJ,EAAItB,QAAQyP,GAAhB,CAGA,IAAIlT,EAAQ+S,aAAazH,QAAQvG,GAYjC,GANI/E,IACAA,EAAQgH,EAAOiK,WAAWnB,YAAY9P,IAG1CA,EAAQqC,EAASrC,EAAO+E,EAAIqK,UAAUsE,GAAkB9H,UAE1C,IAAV5L,EACA,OAAOA,OAMnB,OADA0E,EAAgBnF,EAASoF,GAClBpF,EAIX,SAASoU,GAAMvY,EAAGuJ,GACd,IAAInG,EAAOD,KACPgB,EAAUf,EAAKuM,QAAQzK,MAAK,WAC5B,IACIO,EADAmG,EAASxI,EAAK4L,QAElB,IACIvJ,EAASkS,aAAahO,IAAI3J,GAC5B,MAAOyG,GACLhB,EAAS,KAQb,OAJIA,IACAA,EAASA,EAAOuO,UAAUpI,EAAOkM,UAAUlX,SAGxC6E,KAIX,OADA6D,EAAgBnF,EAASoF,GAClBpF,EAGX,SAASqU,GAAOjP,GACZ,IAAInG,EAAOD,KACPgB,EAAUf,EAAKuM,QAAQzK,MAAK,WAK5B,IAJA,IAAI0G,EAASxI,EAAK4L,QACdpO,EAAS+W,aAAa/W,OACtBqQ,EAAO,GAEF1Q,EAAI,EAAGA,EAAIK,EAAQL,IAAK,CAC7B,IAAIkY,EAAUd,aAAahO,IAAIpJ,GACW,IAAtCkY,EAAQpQ,QAAQuD,EAAOkM,YACvB7G,EAAK/N,KAAKuV,EAAQzE,UAAUpI,EAAOkM,UAAUlX,SAIrD,OAAOqQ,KAIX,OADA3H,EAAgBnF,EAASoF,GAClBpF,EAIX,SAASuU,GAASnP,GACd,IAAInG,EAAOD,KACPgB,EAAUf,EAAK6N,OAAO/L,MAAK,SAAU+L,GACrC,OAAOA,EAAKrQ,UAIhB,OADA0I,EAAgBnF,EAASoF,GAClBpF,EAIX,SAASwU,GAAahP,EAAKJ,GACvB,IAAInG,EAAOD,KAEXwG,EAAMD,EAAaC,GAEnB,IAAIxF,EAAUf,EAAKuM,QAAQzK,MAAK,WAC5B,IAAI0G,EAASxI,EAAK4L,QAClB2I,aAAa/G,WAAWhF,EAAOkM,UAAYnO,MAI/C,OADAL,EAAgBnF,EAASoF,GAClBpF,EAOX,SAASyU,GAAUjP,EAAK/E,EAAO2E,GAC3B,IAAInG,EAAOD,KAEXwG,EAAMD,EAAaC,GAEnB,IAAIxF,EAAUf,EAAKuM,QAAQzK,MAAK,gBAGdqK,IAAV3K,IACAA,EAAQ,MAIZ,IAAI6R,EAAgB7R,EAEpB,OAAO,IAAIyE,GAAU,SAAUtE,EAASD,GACpC,IAAI8G,EAASxI,EAAK4L,QAClBpD,EAAOiK,WAAW5B,UAAUrP,GAAO,SAAUA,EAAO6B,GAChD,GAAIA,EACA3B,EAAO2B,QAEP,IACIkR,aAAajH,QAAQ9E,EAAOkM,UAAYnO,EAAK/E,GAC7CG,EAAQ0R,GACV,MAAO3W,GAGU,uBAAXA,EAAE6I,MAA4C,+BAAX7I,EAAE6I,MACrC7D,EAAOhF,GAEXgF,EAAOhF,aAQ3B,OADAwJ,EAAgBnF,EAASoF,GAClBpF,EAGX,SAAS0U,GAAenJ,EAASnG,GAI7B,GAHAA,EAAWQ,EAAY5E,MAAMhC,KAAMiC,WAEnCsK,EAA6B,oBAAZA,GAA0BA,GAAW,IACjDA,EAAQ/G,KAAM,CACf,IAAIwI,EAAgBhO,KAAKiO,SACzB1B,EAAQ/G,KAAO+G,EAAQ/G,MAAQwI,EAAcxI,KAC7C+G,EAAQ1C,UAAY0C,EAAQ1C,WAAamE,EAAcnE,UAG3D,IACI7I,EADAf,EAAOD,KAuBX,OAlBIgB,EAHCuL,EAAQ/G,KAGC,IAAIU,GAAU,SAAUtE,GACzB2K,EAAQ1C,UAGTjI,EAAQ6S,GAAclI,EAAStM,EAAK4M,iBAFpCjL,EAAQ2K,EAAQ/G,KAAO,QAI5BzD,MAAK,SAAU4S,GACd,IAAK,IAAIvX,EAAIoX,aAAa/W,OAAS,EAAGL,GAAK,EAAGA,IAAK,CAC/C,IAAIoJ,EAAMgO,aAAahO,IAAIpJ,GAEI,IAA3BoJ,EAAItB,QAAQyP,IACZH,aAAa/G,WAAWjH,OAb1BN,EAAUvE,OAAO,qBAmB/BwE,EAAgBnF,EAASoF,GAClBpF,EAGX,IAAI2U,GAAsB,CACtB/G,QAAS,sBACTtC,aAAcyI,GACdlG,SAAU0F,KACVpH,QAAS+H,GACTnI,QAASkI,GACT1H,QAASkI,GACThI,WAAY+H,GACZ9H,MAAOsH,GACPvX,OAAQ8X,GACR/O,IAAK4O,GACLtH,KAAMuH,GACNtH,aAAc2H,IAGdE,GAAY,SAAmBC,EAAGC,GAClC,OAAOD,IAAMC,GAAkB,kBAAND,GAA+B,kBAANC,GAAkBC,MAAMF,IAAME,MAAMD,IAGtFE,GAAW,SAAkBC,EAAOC,GACpC,IAAItW,EAAMqW,EAAMxY,OACZL,EAAI,EACR,MAAOA,EAAIwC,EAAK,CACZ,GAAIgW,GAAUK,EAAM7Y,GAAI8Y,GACpB,OAAO,EAEX9Y,IAGJ,OAAO,GAGP+Y,GAAUlT,MAAMkT,SAAW,SAAUC,GACrC,MAA+C,mBAAxCvT,OAAOC,UAAUC,SAASvF,KAAK4Y,IAKtCC,GAAiB,GAEjBC,GAAgB,GAEhBC,GAAiB,CACjBC,UAAW7H,EACX8H,OAAQnC,GACRoC,aAAcf,IAGdgB,GAAqB,CAACJ,GAAeC,UAAU5H,QAAS2H,GAAeE,OAAO7H,QAAS2H,GAAeG,aAAa9H,SAEnHgI,GAAwB,CAAC,gBAEzBC,GAAiB,CAAC,QAAS,UAAW,UAAW,MAAO,OAAQ,SAAU,aAAc,WAAWC,OAAOF,IAE1GG,GAAgB,CAChBvE,YAAa,GACbwE,OAAQL,GAAmB/J,QAC3BpH,KAAM,cAGNiN,KAAM,QACN5I,UAAW,gBACXL,QAAS,GAGb,SAASyN,GAAcC,EAAqBC,GACxCD,EAAoBC,GAAiB,WACjC,IAAIC,EAAQnV,UACZ,OAAOiV,EAAoB1K,QAAQzK,MAAK,WACpC,OAAOmV,EAAoBC,GAAenV,MAAMkV,EAAqBE,OAKjF,SAASC,KACL,IAAK,IAAIja,EAAI,EAAGA,EAAI6E,UAAUxE,OAAQL,IAAK,CACvC,IAAIgZ,EAAMnU,UAAU7E,GAEpB,GAAIgZ,EACA,IAAK,IAAIkB,KAAQlB,EACTA,EAAImB,eAAeD,KACfnB,GAAQC,EAAIkB,IACZrV,UAAU,GAAGqV,GAAQlB,EAAIkB,GAAM1K,QAE/B3K,UAAU,GAAGqV,GAAQlB,EAAIkB,IAO7C,OAAOrV,UAAU,GAGrB,IAAIuV,GAAc,WACd,SAASA,EAAYjL,GAGjB,IAAK,IAAIkL,KAFT1T,EAAgB/D,KAAMwX,GAEIjB,GACtB,GAAIA,GAAegB,eAAeE,GAAgB,CAC9C,IAAIT,EAAST,GAAekB,GACxBC,EAAaV,EAAOpI,QACxB5O,KAAKyX,GAAiBC,EAEjBrB,GAAeqB,IAIhB1X,KAAK2X,aAAaX,GAK9BhX,KAAK6M,eAAiBwK,GAAO,GAAIN,IACjC/W,KAAK4X,QAAUP,GAAO,GAAIrX,KAAK6M,eAAgBN,GAC/CvM,KAAK6X,WAAa,KAClB7X,KAAK8X,YAAc,KACnB9X,KAAK+X,QAAS,EACd/X,KAAK6L,QAAU,KAEf7L,KAAKgY,+BACLhY,KAAKiY,UAAUjY,KAAK4X,QAAQZ,QAAQ,UAAS,eA0QjD,OAjQAQ,EAAY1U,UAAUmL,OAAS,SAAgB1B,GAI3C,GAA0E,YAAlD,qBAAZA,EAA0B,YAAc3I,EAAQ2I,IAAwB,CAGhF,GAAIvM,KAAK+X,OACL,OAAO,IAAI1a,MAAM,wDAGrB,IAAK,IAAID,KAAKmP,EAAS,CAKnB,GAJU,cAANnP,IACAmP,EAAQnP,GAAKmP,EAAQnP,GAAG8a,QAAQ,MAAO,MAGjC,YAAN9a,GAAyC,kBAAfmP,EAAQnP,GAClC,OAAO,IAAIC,MAAM,sCAGrB2C,KAAK4X,QAAQxa,GAAKmP,EAAQnP,GAK9B,QAAI,WAAYmP,GAAWA,EAAQyK,SACxBhX,KAAKiY,UAAUjY,KAAK4X,QAAQZ,QAIpC,MAAuB,kBAAZzK,EACPvM,KAAK4X,QAAQrL,GAEbvM,KAAK4X,SAQpBJ,EAAY1U,UAAU6U,aAAe,SAAsBQ,EAAc/R,EAAUE,GAC/E,IAAItF,EAAU,IAAIkF,GAAU,SAAUtE,EAASD,GAC3C,IACI,IAAI+V,EAAaS,EAAavJ,QAC1BwJ,EAAkB,IAAI/a,MAAM,wFAIhC,IAAK8a,EAAavJ,QAEd,YADAjN,EAAOyW,GAKX,IADA,IAAIC,EAAgBxB,GAAeC,OAAO,gBACjC1Z,EAAI,EAAGwC,EAAMyY,EAAc5a,OAAQL,EAAIwC,EAAKxC,IAAK,CACtD,IAAIkb,EAAmBD,EAAcjb,GAIjCmb,GAAcvC,GAASY,GAAuB0B,GAClD,IAAKC,GAAcJ,EAAaG,KAAgE,oBAAnCH,EAAaG,GAEtE,YADA3W,EAAOyW,GAKf,IAAII,EAA0B,WAU1B,IATA,IAAIC,EAA8B,SAAqCC,GACnE,OAAO,WACH,IAAIpV,EAAQ,IAAIjG,MAAM,UAAYqb,EAAa,6CAC3C1X,EAAUkF,EAAUvE,OAAO2B,GAE/B,OADA6C,EAAgBnF,EAASiB,UAAUA,UAAUxE,OAAS,IAC/CuD,IAIN2X,EAAK,EAAGC,EAAOhC,GAAsBnZ,OAAQkb,EAAKC,EAAMD,IAAM,CACnE,IAAIE,EAAuBjC,GAAsB+B,GAC5CR,EAAaU,KACdV,EAAaU,GAAwBJ,EAA4BI,MAK7EL,IAEA,IAAIM,EAAmB,SAA0BC,GACzC1C,GAAeqB,IACfjR,QAAQuS,KAAK,kCAAoCtB,GAErDrB,GAAeqB,GAAcS,EAC7B7B,GAAcoB,GAAcqB,EAI5BnX,KAGA,aAAcuW,EACVA,EAAatJ,UAA6C,oBAA1BsJ,EAAatJ,SAC7CsJ,EAAatJ,WAAW9M,KAAK+W,EAAkBnX,GAE/CmX,IAAmBX,EAAatJ,UAGpCiK,GAAiB,GAEvB,MAAOnc,GACLgF,EAAOhF,OAKf,OADA0J,EAAoBrF,EAASoF,EAAUE,GAChCtF,GAGXwW,EAAY1U,UAAUkU,OAAS,WAC3B,OAAOhX,KAAK4O,SAAW,MAG3B4I,EAAY1U,UAAUmW,UAAY,SAAmBvB,EAAYtR,EAAUE,GACvE,IAAI4S,EAAmB7C,GAAeqB,GAAcxR,EAAUtE,QAAQyU,GAAeqB,IAAexR,EAAUvE,OAAO,IAAItE,MAAM,sBAG/H,OADAgJ,EAAoB6S,EAAkB9S,EAAUE,GACzC4S,GAGX1B,EAAY1U,UAAUqW,cAAgB,SAAuB/S,GACzD,IAAIgT,EAAoBlT,EAAUtE,QAAQuQ,IAE1C,OADA9L,EAAoB+S,EAAmBhT,GAChCgT,GAGX5B,EAAY1U,UAAU0J,MAAQ,SAAepG,GACzC,IAAInG,EAAOD,KAEPgB,EAAUf,EAAK4X,WAAW9V,MAAK,WAK/B,OAJoB,OAAhB9B,EAAK8X,SACL9X,EAAK8X,OAAS9X,EAAK6X,eAGhB7X,EAAK8X,UAIhB,OADA1R,EAAoBrF,EAASoF,EAAUA,GAChCpF,GAGXwW,EAAY1U,UAAUmV,UAAY,SAAmBoB,EAASjT,EAAUE,GACpE,IAAIrG,EAAOD,KAENmW,GAAQkD,KACTA,EAAU,CAACA,IAGf,IAAIC,EAAmBtZ,KAAKuZ,qBAAqBF,GAEjD,SAASG,IACLvZ,EAAK2X,QAAQZ,OAAS/W,EAAK+W,SAG/B,SAASyC,EAAqBzC,GAK1B,OAJA/W,EAAKyZ,QAAQ1C,GACbwC,IAEAvZ,EAAK8X,OAAS9X,EAAKqM,aAAarM,EAAK2X,SAC9B3X,EAAK8X,OAGhB,SAAS4B,EAAWL,GAChB,OAAO,WACH,IAAIM,EAAqB,EAEzB,SAASC,IACL,MAAOD,EAAqBN,EAAiB7b,OAAQ,CACjD,IAAIia,EAAa4B,EAAiBM,GAMlC,OALAA,IAEA3Z,EAAK4L,QAAU,KACf5L,EAAK8X,OAAS,KAEP9X,EAAKgZ,UAAUvB,GAAY3V,KAAK0X,GAAsB,SAASI,GAG1EL,IACA,IAAIlW,EAAQ,IAAIjG,MAAM,sCAEtB,OADA4C,EAAK4X,WAAa3R,EAAUvE,OAAO2B,GAC5BrD,EAAK4X,WAGhB,OAAOgC,KAOf,IAAIC,EAAuC,OAApB9Z,KAAK6X,WAAsB7X,KAAK6X,WAAW,UAAS,WACvE,OAAO3R,EAAUtE,aAChBsE,EAAUtE,UAqBf,OAnBA5B,KAAK6X,WAAaiC,EAAiB/X,MAAK,WACpC,IAAI2V,EAAa4B,EAAiB,GAIlC,OAHArZ,EAAK4L,QAAU,KACf5L,EAAK8X,OAAS,KAEP9X,EAAKgZ,UAAUvB,GAAY3V,MAAK,SAAUiV,GAC7C/W,EAAK2O,QAAUoI,EAAOpI,QACtB4K,IACAvZ,EAAK+X,+BACL/X,EAAK6X,YAAc6B,EAAWL,SAEnC,UAAS,WACRE,IACA,IAAIlW,EAAQ,IAAIjG,MAAM,sCAEtB,OADA4C,EAAK4X,WAAa3R,EAAUvE,OAAO2B,GAC5BrD,EAAK4X,cAGhBxR,EAAoBrG,KAAK6X,WAAYzR,EAAUE,GACxCtG,KAAK6X,YAGhBL,EAAY1U,UAAUiX,SAAW,SAAkBrC,GAC/C,QAASpB,GAAcoB,IAG3BF,EAAY1U,UAAU4W,QAAU,SAAiBM,GAC7C3C,GAAOrX,KAAMga,IAGjBxC,EAAY1U,UAAUyW,qBAAuB,SAA8BF,GAEvE,IADA,IAAIC,EAAmB,GACdlc,EAAI,EAAGwC,EAAMyZ,EAAQ5b,OAAQL,EAAIwC,EAAKxC,IAAK,CAChD,IAAIsa,EAAa2B,EAAQjc,GACrB4C,KAAK+Z,SAASrC,IACd4B,EAAiBvZ,KAAK2X,GAG9B,OAAO4B,GAGX9B,EAAY1U,UAAUkV,6BAA+B,WAKjD,IAAK,IAAI5a,EAAI,EAAGwC,EAAMiX,GAAepZ,OAAQL,EAAIwC,EAAKxC,IAClD6Z,GAAcjX,KAAM6W,GAAezZ,KAI3Coa,EAAY1U,UAAUmX,eAAiB,SAAwB1N,GAC3D,OAAO,IAAIiL,EAAYjL,IAGpBiL,EArSO,GA4Sd0C,GAAiB,IAAI1C,GAEzB/a,EAAOC,QAAUwd,IAEf,CAAC,EAAI,KAAK,GAAG,CAAC,GAruFmW,CAquF/V,Q","file":"js/chunk-2d207327.c3e92bdd.js","sourcesContent":["/*!\n    localForage -- Offline Storage, Improved\n    Version 1.7.3\n    https://localforage.github.io/localForage\n    (c) 2013-2017 Mozilla, Apache License 2.0\n*/\n(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.localforage = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw (f.code=\"MODULE_NOT_FOUND\", f)}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(_dereq_,module,exports){\n(function (global){\n'use strict';\nvar Mutation = global.MutationObserver || global.WebKitMutationObserver;\n\nvar scheduleDrain;\n\n{\n  if (Mutation) {\n    var called = 0;\n    var observer = new Mutation(nextTick);\n    var element = global.document.createTextNode('');\n    observer.observe(element, {\n      characterData: true\n    });\n    scheduleDrain = function () {\n      element.data = (called = ++called % 2);\n    };\n  } else if (!global.setImmediate && typeof global.MessageChannel !== 'undefined') {\n    var channel = new global.MessageChannel();\n    channel.port1.onmessage = nextTick;\n    scheduleDrain = function () {\n      channel.port2.postMessage(0);\n    };\n  } else if ('document' in global && 'onreadystatechange' in global.document.createElement('script')) {\n    scheduleDrain = function () {\n\n      // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n      // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n      var scriptEl = global.document.createElement('script');\n      scriptEl.onreadystatechange = function () {\n        nextTick();\n\n        scriptEl.onreadystatechange = null;\n        scriptEl.parentNode.removeChild(scriptEl);\n        scriptEl = null;\n      };\n      global.document.documentElement.appendChild(scriptEl);\n    };\n  } else {\n    scheduleDrain = function () {\n      setTimeout(nextTick, 0);\n    };\n  }\n}\n\nvar draining;\nvar queue = [];\n//named nextTick for less confusing stack traces\nfunction nextTick() {\n  draining = true;\n  var i, oldQueue;\n  var len = queue.length;\n  while (len) {\n    oldQueue = queue;\n    queue = [];\n    i = -1;\n    while (++i < len) {\n      oldQueue[i]();\n    }\n    len = queue.length;\n  }\n  draining = false;\n}\n\nmodule.exports = immediate;\nfunction immediate(task) {\n  if (queue.push(task) === 1 && !draining) {\n    scheduleDrain();\n  }\n}\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{}],2:[function(_dereq_,module,exports){\n'use strict';\nvar immediate = _dereq_(1);\n\n/* istanbul ignore next */\nfunction INTERNAL() {}\n\nvar handlers = {};\n\nvar REJECTED = ['REJECTED'];\nvar FULFILLED = ['FULFILLED'];\nvar PENDING = ['PENDING'];\n\nmodule.exports = Promise;\n\nfunction Promise(resolver) {\n  if (typeof resolver !== 'function') {\n    throw new TypeError('resolver must be a function');\n  }\n  this.state = PENDING;\n  this.queue = [];\n  this.outcome = void 0;\n  if (resolver !== INTERNAL) {\n    safelyResolveThenable(this, resolver);\n  }\n}\n\nPromise.prototype[\"catch\"] = function (onRejected) {\n  return this.then(null, onRejected);\n};\nPromise.prototype.then = function (onFulfilled, onRejected) {\n  if (typeof onFulfilled !== 'function' && this.state === FULFILLED ||\n    typeof onRejected !== 'function' && this.state === REJECTED) {\n    return this;\n  }\n  var promise = new this.constructor(INTERNAL);\n  if (this.state !== PENDING) {\n    var resolver = this.state === FULFILLED ? onFulfilled : onRejected;\n    unwrap(promise, resolver, this.outcome);\n  } else {\n    this.queue.push(new QueueItem(promise, onFulfilled, onRejected));\n  }\n\n  return promise;\n};\nfunction QueueItem(promise, onFulfilled, onRejected) {\n  this.promise = promise;\n  if (typeof onFulfilled === 'function') {\n    this.onFulfilled = onFulfilled;\n    this.callFulfilled = this.otherCallFulfilled;\n  }\n  if (typeof onRejected === 'function') {\n    this.onRejected = onRejected;\n    this.callRejected = this.otherCallRejected;\n  }\n}\nQueueItem.prototype.callFulfilled = function (value) {\n  handlers.resolve(this.promise, value);\n};\nQueueItem.prototype.otherCallFulfilled = function (value) {\n  unwrap(this.promise, this.onFulfilled, value);\n};\nQueueItem.prototype.callRejected = function (value) {\n  handlers.reject(this.promise, value);\n};\nQueueItem.prototype.otherCallRejected = function (value) {\n  unwrap(this.promise, this.onRejected, value);\n};\n\nfunction unwrap(promise, func, value) {\n  immediate(function () {\n    var returnValue;\n    try {\n      returnValue = func(value);\n    } catch (e) {\n      return handlers.reject(promise, e);\n    }\n    if (returnValue === promise) {\n      handlers.reject(promise, new TypeError('Cannot resolve promise with itself'));\n    } else {\n      handlers.resolve(promise, returnValue);\n    }\n  });\n}\n\nhandlers.resolve = function (self, value) {\n  var result = tryCatch(getThen, value);\n  if (result.status === 'error') {\n    return handlers.reject(self, result.value);\n  }\n  var thenable = result.value;\n\n  if (thenable) {\n    safelyResolveThenable(self, thenable);\n  } else {\n    self.state = FULFILLED;\n    self.outcome = value;\n    var i = -1;\n    var len = self.queue.length;\n    while (++i < len) {\n      self.queue[i].callFulfilled(value);\n    }\n  }\n  return self;\n};\nhandlers.reject = function (self, error) {\n  self.state = REJECTED;\n  self.outcome = error;\n  var i = -1;\n  var len = self.queue.length;\n  while (++i < len) {\n    self.queue[i].callRejected(error);\n  }\n  return self;\n};\n\nfunction getThen(obj) {\n  // Make sure we only access the accessor once as required by the spec\n  var then = obj && obj.then;\n  if (obj && (typeof obj === 'object' || typeof obj === 'function') && typeof then === 'function') {\n    return function appyThen() {\n      then.apply(obj, arguments);\n    };\n  }\n}\n\nfunction safelyResolveThenable(self, thenable) {\n  // Either fulfill, reject or reject with error\n  var called = false;\n  function onError(value) {\n    if (called) {\n      return;\n    }\n    called = true;\n    handlers.reject(self, value);\n  }\n\n  function onSuccess(value) {\n    if (called) {\n      return;\n    }\n    called = true;\n    handlers.resolve(self, value);\n  }\n\n  function tryToUnwrap() {\n    thenable(onSuccess, onError);\n  }\n\n  var result = tryCatch(tryToUnwrap);\n  if (result.status === 'error') {\n    onError(result.value);\n  }\n}\n\nfunction tryCatch(func, value) {\n  var out = {};\n  try {\n    out.value = func(value);\n    out.status = 'success';\n  } catch (e) {\n    out.status = 'error';\n    out.value = e;\n  }\n  return out;\n}\n\nPromise.resolve = resolve;\nfunction resolve(value) {\n  if (value instanceof this) {\n    return value;\n  }\n  return handlers.resolve(new this(INTERNAL), value);\n}\n\nPromise.reject = reject;\nfunction reject(reason) {\n  var promise = new this(INTERNAL);\n  return handlers.reject(promise, reason);\n}\n\nPromise.all = all;\nfunction all(iterable) {\n  var self = this;\n  if (Object.prototype.toString.call(iterable) !== '[object Array]') {\n    return this.reject(new TypeError('must be an array'));\n  }\n\n  var len = iterable.length;\n  var called = false;\n  if (!len) {\n    return this.resolve([]);\n  }\n\n  var values = new Array(len);\n  var resolved = 0;\n  var i = -1;\n  var promise = new this(INTERNAL);\n\n  while (++i < len) {\n    allResolver(iterable[i], i);\n  }\n  return promise;\n  function allResolver(value, i) {\n    self.resolve(value).then(resolveFromAll, function (error) {\n      if (!called) {\n        called = true;\n        handlers.reject(promise, error);\n      }\n    });\n    function resolveFromAll(outValue) {\n      values[i] = outValue;\n      if (++resolved === len && !called) {\n        called = true;\n        handlers.resolve(promise, values);\n      }\n    }\n  }\n}\n\nPromise.race = race;\nfunction race(iterable) {\n  var self = this;\n  if (Object.prototype.toString.call(iterable) !== '[object Array]') {\n    return this.reject(new TypeError('must be an array'));\n  }\n\n  var len = iterable.length;\n  var called = false;\n  if (!len) {\n    return this.resolve([]);\n  }\n\n  var i = -1;\n  var promise = new this(INTERNAL);\n\n  while (++i < len) {\n    resolver(iterable[i]);\n  }\n  return promise;\n  function resolver(value) {\n    self.resolve(value).then(function (response) {\n      if (!called) {\n        called = true;\n        handlers.resolve(promise, response);\n      }\n    }, function (error) {\n      if (!called) {\n        called = true;\n        handlers.reject(promise, error);\n      }\n    });\n  }\n}\n\n},{\"1\":1}],3:[function(_dereq_,module,exports){\n(function (global){\n'use strict';\nif (typeof global.Promise !== 'function') {\n  global.Promise = _dereq_(2);\n}\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"2\":2}],4:[function(_dereq_,module,exports){\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction getIDB() {\n    /* global indexedDB,webkitIndexedDB,mozIndexedDB,OIndexedDB,msIndexedDB */\n    try {\n        if (typeof indexedDB !== 'undefined') {\n            return indexedDB;\n        }\n        if (typeof webkitIndexedDB !== 'undefined') {\n            return webkitIndexedDB;\n        }\n        if (typeof mozIndexedDB !== 'undefined') {\n            return mozIndexedDB;\n        }\n        if (typeof OIndexedDB !== 'undefined') {\n            return OIndexedDB;\n        }\n        if (typeof msIndexedDB !== 'undefined') {\n            return msIndexedDB;\n        }\n    } catch (e) {\n        return;\n    }\n}\n\nvar idb = getIDB();\n\nfunction isIndexedDBValid() {\n    try {\n        // Initialize IndexedDB; fall back to vendor-prefixed versions\n        // if needed.\n        if (!idb) {\n            return false;\n        }\n        // We mimic PouchDB here;\n        //\n        // We test for openDatabase because IE Mobile identifies itself\n        // as Safari. Oh the lulz...\n        var isSafari = typeof openDatabase !== 'undefined' && /(Safari|iPhone|iPad|iPod)/.test(navigator.userAgent) && !/Chrome/.test(navigator.userAgent) && !/BlackBerry/.test(navigator.platform);\n\n        var hasFetch = typeof fetch === 'function' && fetch.toString().indexOf('[native code') !== -1;\n\n        // Safari <10.1 does not meet our requirements for IDB support (#5572)\n        // since Safari 10.1 shipped with fetch, we can use that to detect it\n        return (!isSafari || hasFetch) && typeof indexedDB !== 'undefined' &&\n        // some outdated implementations of IDB that appear on Samsung\n        // and HTC Android devices <4.4 are missing IDBKeyRange\n        // See: https://github.com/mozilla/localForage/issues/128\n        // See: https://github.com/mozilla/localForage/issues/272\n        typeof IDBKeyRange !== 'undefined';\n    } catch (e) {\n        return false;\n    }\n}\n\n// Abstracts constructing a Blob object, so it also works in older\n// browsers that don't support the native Blob constructor. (i.e.\n// old QtWebKit versions, at least).\n// Abstracts constructing a Blob object, so it also works in older\n// browsers that don't support the native Blob constructor. (i.e.\n// old QtWebKit versions, at least).\nfunction createBlob(parts, properties) {\n    /* global BlobBuilder,MSBlobBuilder,MozBlobBuilder,WebKitBlobBuilder */\n    parts = parts || [];\n    properties = properties || {};\n    try {\n        return new Blob(parts, properties);\n    } catch (e) {\n        if (e.name !== 'TypeError') {\n            throw e;\n        }\n        var Builder = typeof BlobBuilder !== 'undefined' ? BlobBuilder : typeof MSBlobBuilder !== 'undefined' ? MSBlobBuilder : typeof MozBlobBuilder !== 'undefined' ? MozBlobBuilder : WebKitBlobBuilder;\n        var builder = new Builder();\n        for (var i = 0; i < parts.length; i += 1) {\n            builder.append(parts[i]);\n        }\n        return builder.getBlob(properties.type);\n    }\n}\n\n// This is CommonJS because lie is an external dependency, so Rollup\n// can just ignore it.\nif (typeof Promise === 'undefined') {\n    // In the \"nopromises\" build this will just throw if you don't have\n    // a global promise object, but it would throw anyway later.\n    _dereq_(3);\n}\nvar Promise$1 = Promise;\n\nfunction executeCallback(promise, callback) {\n    if (callback) {\n        promise.then(function (result) {\n            callback(null, result);\n        }, function (error) {\n            callback(error);\n        });\n    }\n}\n\nfunction executeTwoCallbacks(promise, callback, errorCallback) {\n    if (typeof callback === 'function') {\n        promise.then(callback);\n    }\n\n    if (typeof errorCallback === 'function') {\n        promise[\"catch\"](errorCallback);\n    }\n}\n\nfunction normalizeKey(key) {\n    // Cast the key to a string, as that's all we can set as a key.\n    if (typeof key !== 'string') {\n        console.warn(key + ' used as a key, but it is not a string.');\n        key = String(key);\n    }\n\n    return key;\n}\n\nfunction getCallback() {\n    if (arguments.length && typeof arguments[arguments.length - 1] === 'function') {\n        return arguments[arguments.length - 1];\n    }\n}\n\n// Some code originally from async_storage.js in\n// [Gaia](https://github.com/mozilla-b2g/gaia).\n\nvar DETECT_BLOB_SUPPORT_STORE = 'local-forage-detect-blob-support';\nvar supportsBlobs = void 0;\nvar dbContexts = {};\nvar toString = Object.prototype.toString;\n\n// Transaction Modes\nvar READ_ONLY = 'readonly';\nvar READ_WRITE = 'readwrite';\n\n// Transform a binary string to an array buffer, because otherwise\n// weird stuff happens when you try to work with the binary string directly.\n// It is known.\n// From http://stackoverflow.com/questions/14967647/ (continues on next line)\n// encode-decode-image-with-base64-breaks-image (2013-04-21)\nfunction _binStringToArrayBuffer(bin) {\n    var length = bin.length;\n    var buf = new ArrayBuffer(length);\n    var arr = new Uint8Array(buf);\n    for (var i = 0; i < length; i++) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return buf;\n}\n\n//\n// Blobs are not supported in all versions of IndexedDB, notably\n// Chrome <37 and Android <5. In those versions, storing a blob will throw.\n//\n// Various other blob bugs exist in Chrome v37-42 (inclusive).\n// Detecting them is expensive and confusing to users, and Chrome 37-42\n// is at very low usage worldwide, so we do a hacky userAgent check instead.\n//\n// content-type bug: https://code.google.com/p/chromium/issues/detail?id=408120\n// 404 bug: https://code.google.com/p/chromium/issues/detail?id=447916\n// FileReader bug: https://code.google.com/p/chromium/issues/detail?id=447836\n//\n// Code borrowed from PouchDB. See:\n// https://github.com/pouchdb/pouchdb/blob/master/packages/node_modules/pouchdb-adapter-idb/src/blobSupport.js\n//\nfunction _checkBlobSupportWithoutCaching(idb) {\n    return new Promise$1(function (resolve) {\n        var txn = idb.transaction(DETECT_BLOB_SUPPORT_STORE, READ_WRITE);\n        var blob = createBlob(['']);\n        txn.objectStore(DETECT_BLOB_SUPPORT_STORE).put(blob, 'key');\n\n        txn.onabort = function (e) {\n            // If the transaction aborts now its due to not being able to\n            // write to the database, likely due to the disk being full\n            e.preventDefault();\n            e.stopPropagation();\n            resolve(false);\n        };\n\n        txn.oncomplete = function () {\n            var matchedChrome = navigator.userAgent.match(/Chrome\\/(\\d+)/);\n            var matchedEdge = navigator.userAgent.match(/Edge\\//);\n            // MS Edge pretends to be Chrome 42:\n            // https://msdn.microsoft.com/en-us/library/hh869301%28v=vs.85%29.aspx\n            resolve(matchedEdge || !matchedChrome || parseInt(matchedChrome[1], 10) >= 43);\n        };\n    })[\"catch\"](function () {\n        return false; // error, so assume unsupported\n    });\n}\n\nfunction _checkBlobSupport(idb) {\n    if (typeof supportsBlobs === 'boolean') {\n        return Promise$1.resolve(supportsBlobs);\n    }\n    return _checkBlobSupportWithoutCaching(idb).then(function (value) {\n        supportsBlobs = value;\n        return supportsBlobs;\n    });\n}\n\nfunction _deferReadiness(dbInfo) {\n    var dbContext = dbContexts[dbInfo.name];\n\n    // Create a deferred object representing the current database operation.\n    var deferredOperation = {};\n\n    deferredOperation.promise = new Promise$1(function (resolve, reject) {\n        deferredOperation.resolve = resolve;\n        deferredOperation.reject = reject;\n    });\n\n    // Enqueue the deferred operation.\n    dbContext.deferredOperations.push(deferredOperation);\n\n    // Chain its promise to the database readiness.\n    if (!dbContext.dbReady) {\n        dbContext.dbReady = deferredOperation.promise;\n    } else {\n        dbContext.dbReady = dbContext.dbReady.then(function () {\n            return deferredOperation.promise;\n        });\n    }\n}\n\nfunction _advanceReadiness(dbInfo) {\n    var dbContext = dbContexts[dbInfo.name];\n\n    // Dequeue a deferred operation.\n    var deferredOperation = dbContext.deferredOperations.pop();\n\n    // Resolve its promise (which is part of the database readiness\n    // chain of promises).\n    if (deferredOperation) {\n        deferredOperation.resolve();\n        return deferredOperation.promise;\n    }\n}\n\nfunction _rejectReadiness(dbInfo, err) {\n    var dbContext = dbContexts[dbInfo.name];\n\n    // Dequeue a deferred operation.\n    var deferredOperation = dbContext.deferredOperations.pop();\n\n    // Reject its promise (which is part of the database readiness\n    // chain of promises).\n    if (deferredOperation) {\n        deferredOperation.reject(err);\n        return deferredOperation.promise;\n    }\n}\n\nfunction _getConnection(dbInfo, upgradeNeeded) {\n    return new Promise$1(function (resolve, reject) {\n        dbContexts[dbInfo.name] = dbContexts[dbInfo.name] || createDbContext();\n\n        if (dbInfo.db) {\n            if (upgradeNeeded) {\n                _deferReadiness(dbInfo);\n                dbInfo.db.close();\n            } else {\n                return resolve(dbInfo.db);\n            }\n        }\n\n        var dbArgs = [dbInfo.name];\n\n        if (upgradeNeeded) {\n            dbArgs.push(dbInfo.version);\n        }\n\n        var openreq = idb.open.apply(idb, dbArgs);\n\n        if (upgradeNeeded) {\n            openreq.onupgradeneeded = function (e) {\n                var db = openreq.result;\n                try {\n                    db.createObjectStore(dbInfo.storeName);\n                    if (e.oldVersion <= 1) {\n                        // Added when support for blob shims was added\n                        db.createObjectStore(DETECT_BLOB_SUPPORT_STORE);\n                    }\n                } catch (ex) {\n                    if (ex.name === 'ConstraintError') {\n                        console.warn('The database \"' + dbInfo.name + '\"' + ' has been upgraded from version ' + e.oldVersion + ' to version ' + e.newVersion + ', but the storage \"' + dbInfo.storeName + '\" already exists.');\n                    } else {\n                        throw ex;\n                    }\n                }\n            };\n        }\n\n        openreq.onerror = function (e) {\n            e.preventDefault();\n            reject(openreq.error);\n        };\n\n        openreq.onsuccess = function () {\n            resolve(openreq.result);\n            _advanceReadiness(dbInfo);\n        };\n    });\n}\n\nfunction _getOriginalConnection(dbInfo) {\n    return _getConnection(dbInfo, false);\n}\n\nfunction _getUpgradedConnection(dbInfo) {\n    return _getConnection(dbInfo, true);\n}\n\nfunction _isUpgradeNeeded(dbInfo, defaultVersion) {\n    if (!dbInfo.db) {\n        return true;\n    }\n\n    var isNewStore = !dbInfo.db.objectStoreNames.contains(dbInfo.storeName);\n    var isDowngrade = dbInfo.version < dbInfo.db.version;\n    var isUpgrade = dbInfo.version > dbInfo.db.version;\n\n    if (isDowngrade) {\n        // If the version is not the default one\n        // then warn for impossible downgrade.\n        if (dbInfo.version !== defaultVersion) {\n            console.warn('The database \"' + dbInfo.name + '\"' + \" can't be downgraded from version \" + dbInfo.db.version + ' to version ' + dbInfo.version + '.');\n        }\n        // Align the versions to prevent errors.\n        dbInfo.version = dbInfo.db.version;\n    }\n\n    if (isUpgrade || isNewStore) {\n        // If the store is new then increment the version (if needed).\n        // This will trigger an \"upgradeneeded\" event which is required\n        // for creating a store.\n        if (isNewStore) {\n            var incVersion = dbInfo.db.version + 1;\n            if (incVersion > dbInfo.version) {\n                dbInfo.version = incVersion;\n            }\n        }\n\n        return true;\n    }\n\n    return false;\n}\n\n// encode a blob for indexeddb engines that don't support blobs\nfunction _encodeBlob(blob) {\n    return new Promise$1(function (resolve, reject) {\n        var reader = new FileReader();\n        reader.onerror = reject;\n        reader.onloadend = function (e) {\n            var base64 = btoa(e.target.result || '');\n            resolve({\n                __local_forage_encoded_blob: true,\n                data: base64,\n                type: blob.type\n            });\n        };\n        reader.readAsBinaryString(blob);\n    });\n}\n\n// decode an encoded blob\nfunction _decodeBlob(encodedBlob) {\n    var arrayBuff = _binStringToArrayBuffer(atob(encodedBlob.data));\n    return createBlob([arrayBuff], { type: encodedBlob.type });\n}\n\n// is this one of our fancy encoded blobs?\nfunction _isEncodedBlob(value) {\n    return value && value.__local_forage_encoded_blob;\n}\n\n// Specialize the default `ready()` function by making it dependent\n// on the current database operations. Thus, the driver will be actually\n// ready when it's been initialized (default) *and* there are no pending\n// operations on the database (initiated by some other instances).\nfunction _fullyReady(callback) {\n    var self = this;\n\n    var promise = self._initReady().then(function () {\n        var dbContext = dbContexts[self._dbInfo.name];\n\n        if (dbContext && dbContext.dbReady) {\n            return dbContext.dbReady;\n        }\n    });\n\n    executeTwoCallbacks(promise, callback, callback);\n    return promise;\n}\n\n// Try to establish a new db connection to replace the\n// current one which is broken (i.e. experiencing\n// InvalidStateError while creating a transaction).\nfunction _tryReconnect(dbInfo) {\n    _deferReadiness(dbInfo);\n\n    var dbContext = dbContexts[dbInfo.name];\n    var forages = dbContext.forages;\n\n    for (var i = 0; i < forages.length; i++) {\n        var forage = forages[i];\n        if (forage._dbInfo.db) {\n            forage._dbInfo.db.close();\n            forage._dbInfo.db = null;\n        }\n    }\n    dbInfo.db = null;\n\n    return _getOriginalConnection(dbInfo).then(function (db) {\n        dbInfo.db = db;\n        if (_isUpgradeNeeded(dbInfo)) {\n            // Reopen the database for upgrading.\n            return _getUpgradedConnection(dbInfo);\n        }\n        return db;\n    }).then(function (db) {\n        // store the latest db reference\n        // in case the db was upgraded\n        dbInfo.db = dbContext.db = db;\n        for (var i = 0; i < forages.length; i++) {\n            forages[i]._dbInfo.db = db;\n        }\n    })[\"catch\"](function (err) {\n        _rejectReadiness(dbInfo, err);\n        throw err;\n    });\n}\n\n// FF doesn't like Promises (micro-tasks) and IDDB store operations,\n// so we have to do it with callbacks\nfunction createTransaction(dbInfo, mode, callback, retries) {\n    if (retries === undefined) {\n        retries = 1;\n    }\n\n    try {\n        var tx = dbInfo.db.transaction(dbInfo.storeName, mode);\n        callback(null, tx);\n    } catch (err) {\n        if (retries > 0 && (!dbInfo.db || err.name === 'InvalidStateError' || err.name === 'NotFoundError')) {\n            return Promise$1.resolve().then(function () {\n                if (!dbInfo.db || err.name === 'NotFoundError' && !dbInfo.db.objectStoreNames.contains(dbInfo.storeName) && dbInfo.version <= dbInfo.db.version) {\n                    // increase the db version, to create the new ObjectStore\n                    if (dbInfo.db) {\n                        dbInfo.version = dbInfo.db.version + 1;\n                    }\n                    // Reopen the database for upgrading.\n                    return _getUpgradedConnection(dbInfo);\n                }\n            }).then(function () {\n                return _tryReconnect(dbInfo).then(function () {\n                    createTransaction(dbInfo, mode, callback, retries - 1);\n                });\n            })[\"catch\"](callback);\n        }\n\n        callback(err);\n    }\n}\n\nfunction createDbContext() {\n    return {\n        // Running localForages sharing a database.\n        forages: [],\n        // Shared database.\n        db: null,\n        // Database readiness (promise).\n        dbReady: null,\n        // Deferred operations on the database.\n        deferredOperations: []\n    };\n}\n\n// Open the IndexedDB database (automatically creates one if one didn't\n// previously exist), using any options set in the config.\nfunction _initStorage(options) {\n    var self = this;\n    var dbInfo = {\n        db: null\n    };\n\n    if (options) {\n        for (var i in options) {\n            dbInfo[i] = options[i];\n        }\n    }\n\n    // Get the current context of the database;\n    var dbContext = dbContexts[dbInfo.name];\n\n    // ...or create a new context.\n    if (!dbContext) {\n        dbContext = createDbContext();\n        // Register the new context in the global container.\n        dbContexts[dbInfo.name] = dbContext;\n    }\n\n    // Register itself as a running localForage in the current context.\n    dbContext.forages.push(self);\n\n    // Replace the default `ready()` function with the specialized one.\n    if (!self._initReady) {\n        self._initReady = self.ready;\n        self.ready = _fullyReady;\n    }\n\n    // Create an array of initialization states of the related localForages.\n    var initPromises = [];\n\n    function ignoreErrors() {\n        // Don't handle errors here,\n        // just makes sure related localForages aren't pending.\n        return Promise$1.resolve();\n    }\n\n    for (var j = 0; j < dbContext.forages.length; j++) {\n        var forage = dbContext.forages[j];\n        if (forage !== self) {\n            // Don't wait for itself...\n            initPromises.push(forage._initReady()[\"catch\"](ignoreErrors));\n        }\n    }\n\n    // Take a snapshot of the related localForages.\n    var forages = dbContext.forages.slice(0);\n\n    // Initialize the connection process only when\n    // all the related localForages aren't pending.\n    return Promise$1.all(initPromises).then(function () {\n        dbInfo.db = dbContext.db;\n        // Get the connection or open a new one without upgrade.\n        return _getOriginalConnection(dbInfo);\n    }).then(function (db) {\n        dbInfo.db = db;\n        if (_isUpgradeNeeded(dbInfo, self._defaultConfig.version)) {\n            // Reopen the database for upgrading.\n            return _getUpgradedConnection(dbInfo);\n        }\n        return db;\n    }).then(function (db) {\n        dbInfo.db = dbContext.db = db;\n        self._dbInfo = dbInfo;\n        // Share the final connection amongst related localForages.\n        for (var k = 0; k < forages.length; k++) {\n            var forage = forages[k];\n            if (forage !== self) {\n                // Self is already up-to-date.\n                forage._dbInfo.db = dbInfo.db;\n                forage._dbInfo.version = dbInfo.version;\n            }\n        }\n    });\n}\n\nfunction getItem(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.get(key);\n\n                    req.onsuccess = function () {\n                        var value = req.result;\n                        if (value === undefined) {\n                            value = null;\n                        }\n                        if (_isEncodedBlob(value)) {\n                            value = _decodeBlob(value);\n                        }\n                        resolve(value);\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Iterate over all items stored in database.\nfunction iterate(iterator, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.openCursor();\n                    var iterationNumber = 1;\n\n                    req.onsuccess = function () {\n                        var cursor = req.result;\n\n                        if (cursor) {\n                            var value = cursor.value;\n                            if (_isEncodedBlob(value)) {\n                                value = _decodeBlob(value);\n                            }\n                            var result = iterator(value, cursor.key, iterationNumber++);\n\n                            // when the iterator callback retuns any\n                            // (non-`undefined`) value, then we stop\n                            // the iteration immediately\n                            if (result !== void 0) {\n                                resolve(result);\n                            } else {\n                                cursor[\"continue\"]();\n                            }\n                        } else {\n                            resolve();\n                        }\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n\n    return promise;\n}\n\nfunction setItem(key, value, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        var dbInfo;\n        self.ready().then(function () {\n            dbInfo = self._dbInfo;\n            if (toString.call(value) === '[object Blob]') {\n                return _checkBlobSupport(dbInfo.db).then(function (blobSupport) {\n                    if (blobSupport) {\n                        return value;\n                    }\n                    return _encodeBlob(value);\n                });\n            }\n            return value;\n        }).then(function (value) {\n            createTransaction(self._dbInfo, READ_WRITE, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n\n                    // The reason we don't _save_ null is because IE 10 does\n                    // not support saving the `null` type in IndexedDB. How\n                    // ironic, given the bug below!\n                    // See: https://github.com/mozilla/localForage/issues/161\n                    if (value === null) {\n                        value = undefined;\n                    }\n\n                    var req = store.put(value, key);\n\n                    transaction.oncomplete = function () {\n                        // Cast to undefined so the value passed to\n                        // callback/promise is the same as what one would get out\n                        // of `getItem()` later. This leads to some weirdness\n                        // (setItem('foo', undefined) will return `null`), but\n                        // it's not my fault localStorage is our baseline and that\n                        // it's weird.\n                        if (value === undefined) {\n                            value = null;\n                        }\n\n                        resolve(value);\n                    };\n                    transaction.onabort = transaction.onerror = function () {\n                        var err = req.error ? req.error : req.transaction.error;\n                        reject(err);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction removeItem(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_WRITE, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    // We use a Grunt task to make this safe for IE and some\n                    // versions of Android (including those used by Cordova).\n                    // Normally IE won't like `.delete()` and will insist on\n                    // using `['delete']()`, but we have a build step that\n                    // fixes this for us now.\n                    var req = store[\"delete\"](key);\n                    transaction.oncomplete = function () {\n                        resolve();\n                    };\n\n                    transaction.onerror = function () {\n                        reject(req.error);\n                    };\n\n                    // The request will be also be aborted if we've exceeded our storage\n                    // space.\n                    transaction.onabort = function () {\n                        var err = req.error ? req.error : req.transaction.error;\n                        reject(err);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction clear(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_WRITE, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.clear();\n\n                    transaction.oncomplete = function () {\n                        resolve();\n                    };\n\n                    transaction.onabort = transaction.onerror = function () {\n                        var err = req.error ? req.error : req.transaction.error;\n                        reject(err);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction length(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.count();\n\n                    req.onsuccess = function () {\n                        resolve(req.result);\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction key(n, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        if (n < 0) {\n            resolve(null);\n\n            return;\n        }\n\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var advanced = false;\n                    var req = store.openCursor();\n\n                    req.onsuccess = function () {\n                        var cursor = req.result;\n                        if (!cursor) {\n                            // this means there weren't enough keys\n                            resolve(null);\n\n                            return;\n                        }\n\n                        if (n === 0) {\n                            // We have the first key, return it if that's what they\n                            // wanted.\n                            resolve(cursor.key);\n                        } else {\n                            if (!advanced) {\n                                // Otherwise, ask the cursor to skip ahead n\n                                // records.\n                                advanced = true;\n                                cursor.advance(n);\n                            } else {\n                                // When we get here, we've got the nth key.\n                                resolve(cursor.key);\n                            }\n                        }\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction keys(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.openCursor();\n                    var keys = [];\n\n                    req.onsuccess = function () {\n                        var cursor = req.result;\n\n                        if (!cursor) {\n                            resolve(keys);\n                            return;\n                        }\n\n                        keys.push(cursor.key);\n                        cursor[\"continue\"]();\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction dropInstance(options, callback) {\n    callback = getCallback.apply(this, arguments);\n\n    var currentConfig = this.config();\n    options = typeof options !== 'function' && options || {};\n    if (!options.name) {\n        options.name = options.name || currentConfig.name;\n        options.storeName = options.storeName || currentConfig.storeName;\n    }\n\n    var self = this;\n    var promise;\n    if (!options.name) {\n        promise = Promise$1.reject('Invalid arguments');\n    } else {\n        var isCurrentDb = options.name === currentConfig.name && self._dbInfo.db;\n\n        var dbPromise = isCurrentDb ? Promise$1.resolve(self._dbInfo.db) : _getOriginalConnection(options).then(function (db) {\n            var dbContext = dbContexts[options.name];\n            var forages = dbContext.forages;\n            dbContext.db = db;\n            for (var i = 0; i < forages.length; i++) {\n                forages[i]._dbInfo.db = db;\n            }\n            return db;\n        });\n\n        if (!options.storeName) {\n            promise = dbPromise.then(function (db) {\n                _deferReadiness(options);\n\n                var dbContext = dbContexts[options.name];\n                var forages = dbContext.forages;\n\n                db.close();\n                for (var i = 0; i < forages.length; i++) {\n                    var forage = forages[i];\n                    forage._dbInfo.db = null;\n                }\n\n                var dropDBPromise = new Promise$1(function (resolve, reject) {\n                    var req = idb.deleteDatabase(options.name);\n\n                    req.onerror = req.onblocked = function (err) {\n                        var db = req.result;\n                        if (db) {\n                            db.close();\n                        }\n                        reject(err);\n                    };\n\n                    req.onsuccess = function () {\n                        var db = req.result;\n                        if (db) {\n                            db.close();\n                        }\n                        resolve(db);\n                    };\n                });\n\n                return dropDBPromise.then(function (db) {\n                    dbContext.db = db;\n                    for (var i = 0; i < forages.length; i++) {\n                        var _forage = forages[i];\n                        _advanceReadiness(_forage._dbInfo);\n                    }\n                })[\"catch\"](function (err) {\n                    (_rejectReadiness(options, err) || Promise$1.resolve())[\"catch\"](function () {});\n                    throw err;\n                });\n            });\n        } else {\n            promise = dbPromise.then(function (db) {\n                if (!db.objectStoreNames.contains(options.storeName)) {\n                    return;\n                }\n\n                var newVersion = db.version + 1;\n\n                _deferReadiness(options);\n\n                var dbContext = dbContexts[options.name];\n                var forages = dbContext.forages;\n\n                db.close();\n                for (var i = 0; i < forages.length; i++) {\n                    var forage = forages[i];\n                    forage._dbInfo.db = null;\n                    forage._dbInfo.version = newVersion;\n                }\n\n                var dropObjectPromise = new Promise$1(function (resolve, reject) {\n                    var req = idb.open(options.name, newVersion);\n\n                    req.onerror = function (err) {\n                        var db = req.result;\n                        db.close();\n                        reject(err);\n                    };\n\n                    req.onupgradeneeded = function () {\n                        var db = req.result;\n                        db.deleteObjectStore(options.storeName);\n                    };\n\n                    req.onsuccess = function () {\n                        var db = req.result;\n                        db.close();\n                        resolve(db);\n                    };\n                });\n\n                return dropObjectPromise.then(function (db) {\n                    dbContext.db = db;\n                    for (var j = 0; j < forages.length; j++) {\n                        var _forage2 = forages[j];\n                        _forage2._dbInfo.db = db;\n                        _advanceReadiness(_forage2._dbInfo);\n                    }\n                })[\"catch\"](function (err) {\n                    (_rejectReadiness(options, err) || Promise$1.resolve())[\"catch\"](function () {});\n                    throw err;\n                });\n            });\n        }\n    }\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nvar asyncStorage = {\n    _driver: 'asyncStorage',\n    _initStorage: _initStorage,\n    _support: isIndexedDBValid(),\n    iterate: iterate,\n    getItem: getItem,\n    setItem: setItem,\n    removeItem: removeItem,\n    clear: clear,\n    length: length,\n    key: key,\n    keys: keys,\n    dropInstance: dropInstance\n};\n\nfunction isWebSQLValid() {\n    return typeof openDatabase === 'function';\n}\n\n// Sadly, the best way to save binary data in WebSQL/localStorage is serializing\n// it to Base64, so this is how we store it to prevent very strange errors with less\n// verbose ways of binary <-> string data storage.\nvar BASE_CHARS = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\nvar BLOB_TYPE_PREFIX = '~~local_forage_type~';\nvar BLOB_TYPE_PREFIX_REGEX = /^~~local_forage_type~([^~]+)~/;\n\nvar SERIALIZED_MARKER = '__lfsc__:';\nvar SERIALIZED_MARKER_LENGTH = SERIALIZED_MARKER.length;\n\n// OMG the serializations!\nvar TYPE_ARRAYBUFFER = 'arbf';\nvar TYPE_BLOB = 'blob';\nvar TYPE_INT8ARRAY = 'si08';\nvar TYPE_UINT8ARRAY = 'ui08';\nvar TYPE_UINT8CLAMPEDARRAY = 'uic8';\nvar TYPE_INT16ARRAY = 'si16';\nvar TYPE_INT32ARRAY = 'si32';\nvar TYPE_UINT16ARRAY = 'ur16';\nvar TYPE_UINT32ARRAY = 'ui32';\nvar TYPE_FLOAT32ARRAY = 'fl32';\nvar TYPE_FLOAT64ARRAY = 'fl64';\nvar TYPE_SERIALIZED_MARKER_LENGTH = SERIALIZED_MARKER_LENGTH + TYPE_ARRAYBUFFER.length;\n\nvar toString$1 = Object.prototype.toString;\n\nfunction stringToBuffer(serializedString) {\n    // Fill the string into a ArrayBuffer.\n    var bufferLength = serializedString.length * 0.75;\n    var len = serializedString.length;\n    var i;\n    var p = 0;\n    var encoded1, encoded2, encoded3, encoded4;\n\n    if (serializedString[serializedString.length - 1] === '=') {\n        bufferLength--;\n        if (serializedString[serializedString.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n\n    var buffer = new ArrayBuffer(bufferLength);\n    var bytes = new Uint8Array(buffer);\n\n    for (i = 0; i < len; i += 4) {\n        encoded1 = BASE_CHARS.indexOf(serializedString[i]);\n        encoded2 = BASE_CHARS.indexOf(serializedString[i + 1]);\n        encoded3 = BASE_CHARS.indexOf(serializedString[i + 2]);\n        encoded4 = BASE_CHARS.indexOf(serializedString[i + 3]);\n\n        /*jslint bitwise: true */\n        bytes[p++] = encoded1 << 2 | encoded2 >> 4;\n        bytes[p++] = (encoded2 & 15) << 4 | encoded3 >> 2;\n        bytes[p++] = (encoded3 & 3) << 6 | encoded4 & 63;\n    }\n    return buffer;\n}\n\n// Converts a buffer to a string to store, serialized, in the backend\n// storage library.\nfunction bufferToString(buffer) {\n    // base64-arraybuffer\n    var bytes = new Uint8Array(buffer);\n    var base64String = '';\n    var i;\n\n    for (i = 0; i < bytes.length; i += 3) {\n        /*jslint bitwise: true */\n        base64String += BASE_CHARS[bytes[i] >> 2];\n        base64String += BASE_CHARS[(bytes[i] & 3) << 4 | bytes[i + 1] >> 4];\n        base64String += BASE_CHARS[(bytes[i + 1] & 15) << 2 | bytes[i + 2] >> 6];\n        base64String += BASE_CHARS[bytes[i + 2] & 63];\n    }\n\n    if (bytes.length % 3 === 2) {\n        base64String = base64String.substring(0, base64String.length - 1) + '=';\n    } else if (bytes.length % 3 === 1) {\n        base64String = base64String.substring(0, base64String.length - 2) + '==';\n    }\n\n    return base64String;\n}\n\n// Serialize a value, afterwards executing a callback (which usually\n// instructs the `setItem()` callback/promise to be executed). This is how\n// we store binary data with localStorage.\nfunction serialize(value, callback) {\n    var valueType = '';\n    if (value) {\n        valueType = toString$1.call(value);\n    }\n\n    // Cannot use `value instanceof ArrayBuffer` or such here, as these\n    // checks fail when running the tests using casper.js...\n    //\n    // TODO: See why those tests fail and use a better solution.\n    if (value && (valueType === '[object ArrayBuffer]' || value.buffer && toString$1.call(value.buffer) === '[object ArrayBuffer]')) {\n        // Convert binary arrays to a string and prefix the string with\n        // a special marker.\n        var buffer;\n        var marker = SERIALIZED_MARKER;\n\n        if (value instanceof ArrayBuffer) {\n            buffer = value;\n            marker += TYPE_ARRAYBUFFER;\n        } else {\n            buffer = value.buffer;\n\n            if (valueType === '[object Int8Array]') {\n                marker += TYPE_INT8ARRAY;\n            } else if (valueType === '[object Uint8Array]') {\n                marker += TYPE_UINT8ARRAY;\n            } else if (valueType === '[object Uint8ClampedArray]') {\n                marker += TYPE_UINT8CLAMPEDARRAY;\n            } else if (valueType === '[object Int16Array]') {\n                marker += TYPE_INT16ARRAY;\n            } else if (valueType === '[object Uint16Array]') {\n                marker += TYPE_UINT16ARRAY;\n            } else if (valueType === '[object Int32Array]') {\n                marker += TYPE_INT32ARRAY;\n            } else if (valueType === '[object Uint32Array]') {\n                marker += TYPE_UINT32ARRAY;\n            } else if (valueType === '[object Float32Array]') {\n                marker += TYPE_FLOAT32ARRAY;\n            } else if (valueType === '[object Float64Array]') {\n                marker += TYPE_FLOAT64ARRAY;\n            } else {\n                callback(new Error('Failed to get type for BinaryArray'));\n            }\n        }\n\n        callback(marker + bufferToString(buffer));\n    } else if (valueType === '[object Blob]') {\n        // Conver the blob to a binaryArray and then to a string.\n        var fileReader = new FileReader();\n\n        fileReader.onload = function () {\n            // Backwards-compatible prefix for the blob type.\n            var str = BLOB_TYPE_PREFIX + value.type + '~' + bufferToString(this.result);\n\n            callback(SERIALIZED_MARKER + TYPE_BLOB + str);\n        };\n\n        fileReader.readAsArrayBuffer(value);\n    } else {\n        try {\n            callback(JSON.stringify(value));\n        } catch (e) {\n            console.error(\"Couldn't convert value into a JSON string: \", value);\n\n            callback(null, e);\n        }\n    }\n}\n\n// Deserialize data we've inserted into a value column/field. We place\n// special markers into our strings to mark them as encoded; this isn't\n// as nice as a meta field, but it's the only sane thing we can do whilst\n// keeping localStorage support intact.\n//\n// Oftentimes this will just deserialize JSON content, but if we have a\n// special marker (SERIALIZED_MARKER, defined above), we will extract\n// some kind of arraybuffer/binary data/typed array out of the string.\nfunction deserialize(value) {\n    // If we haven't marked this string as being specially serialized (i.e.\n    // something other than serialized JSON), we can just return it and be\n    // done with it.\n    if (value.substring(0, SERIALIZED_MARKER_LENGTH) !== SERIALIZED_MARKER) {\n        return JSON.parse(value);\n    }\n\n    // The following code deals with deserializing some kind of Blob or\n    // TypedArray. First we separate out the type of data we're dealing\n    // with from the data itself.\n    var serializedString = value.substring(TYPE_SERIALIZED_MARKER_LENGTH);\n    var type = value.substring(SERIALIZED_MARKER_LENGTH, TYPE_SERIALIZED_MARKER_LENGTH);\n\n    var blobType;\n    // Backwards-compatible blob type serialization strategy.\n    // DBs created with older versions of localForage will simply not have the blob type.\n    if (type === TYPE_BLOB && BLOB_TYPE_PREFIX_REGEX.test(serializedString)) {\n        var matcher = serializedString.match(BLOB_TYPE_PREFIX_REGEX);\n        blobType = matcher[1];\n        serializedString = serializedString.substring(matcher[0].length);\n    }\n    var buffer = stringToBuffer(serializedString);\n\n    // Return the right type based on the code/type set during\n    // serialization.\n    switch (type) {\n        case TYPE_ARRAYBUFFER:\n            return buffer;\n        case TYPE_BLOB:\n            return createBlob([buffer], { type: blobType });\n        case TYPE_INT8ARRAY:\n            return new Int8Array(buffer);\n        case TYPE_UINT8ARRAY:\n            return new Uint8Array(buffer);\n        case TYPE_UINT8CLAMPEDARRAY:\n            return new Uint8ClampedArray(buffer);\n        case TYPE_INT16ARRAY:\n            return new Int16Array(buffer);\n        case TYPE_UINT16ARRAY:\n            return new Uint16Array(buffer);\n        case TYPE_INT32ARRAY:\n            return new Int32Array(buffer);\n        case TYPE_UINT32ARRAY:\n            return new Uint32Array(buffer);\n        case TYPE_FLOAT32ARRAY:\n            return new Float32Array(buffer);\n        case TYPE_FLOAT64ARRAY:\n            return new Float64Array(buffer);\n        default:\n            throw new Error('Unkown type: ' + type);\n    }\n}\n\nvar localforageSerializer = {\n    serialize: serialize,\n    deserialize: deserialize,\n    stringToBuffer: stringToBuffer,\n    bufferToString: bufferToString\n};\n\n/*\n * Includes code from:\n *\n * base64-arraybuffer\n * https://github.com/niklasvh/base64-arraybuffer\n *\n * Copyright (c) 2012 Niklas von Hertzen\n * Licensed under the MIT license.\n */\n\nfunction createDbTable(t, dbInfo, callback, errorCallback) {\n    t.executeSql('CREATE TABLE IF NOT EXISTS ' + dbInfo.storeName + ' ' + '(id INTEGER PRIMARY KEY, key unique, value)', [], callback, errorCallback);\n}\n\n// Open the WebSQL database (automatically creates one if one didn't\n// previously exist), using any options set in the config.\nfunction _initStorage$1(options) {\n    var self = this;\n    var dbInfo = {\n        db: null\n    };\n\n    if (options) {\n        for (var i in options) {\n            dbInfo[i] = typeof options[i] !== 'string' ? options[i].toString() : options[i];\n        }\n    }\n\n    var dbInfoPromise = new Promise$1(function (resolve, reject) {\n        // Open the database; the openDatabase API will automatically\n        // create it for us if it doesn't exist.\n        try {\n            dbInfo.db = openDatabase(dbInfo.name, String(dbInfo.version), dbInfo.description, dbInfo.size);\n        } catch (e) {\n            return reject(e);\n        }\n\n        // Create our key/value table if it doesn't exist.\n        dbInfo.db.transaction(function (t) {\n            createDbTable(t, dbInfo, function () {\n                self._dbInfo = dbInfo;\n                resolve();\n            }, function (t, error) {\n                reject(error);\n            });\n        }, reject);\n    });\n\n    dbInfo.serializer = localforageSerializer;\n    return dbInfoPromise;\n}\n\nfunction tryExecuteSql(t, dbInfo, sqlStatement, args, callback, errorCallback) {\n    t.executeSql(sqlStatement, args, callback, function (t, error) {\n        if (error.code === error.SYNTAX_ERR) {\n            t.executeSql('SELECT name FROM sqlite_master ' + \"WHERE type='table' AND name = ?\", [dbInfo.storeName], function (t, results) {\n                if (!results.rows.length) {\n                    // if the table is missing (was deleted)\n                    // re-create it table and retry\n                    createDbTable(t, dbInfo, function () {\n                        t.executeSql(sqlStatement, args, callback, errorCallback);\n                    }, errorCallback);\n                } else {\n                    errorCallback(t, error);\n                }\n            }, errorCallback);\n        } else {\n            errorCallback(t, error);\n        }\n    }, errorCallback);\n}\n\nfunction getItem$1(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'SELECT * FROM ' + dbInfo.storeName + ' WHERE key = ? LIMIT 1', [key], function (t, results) {\n                    var result = results.rows.length ? results.rows.item(0).value : null;\n\n                    // Check to see if this is serialized content we need to\n                    // unpack.\n                    if (result) {\n                        result = dbInfo.serializer.deserialize(result);\n                    }\n\n                    resolve(result);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction iterate$1(iterator, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'SELECT * FROM ' + dbInfo.storeName, [], function (t, results) {\n                    var rows = results.rows;\n                    var length = rows.length;\n\n                    for (var i = 0; i < length; i++) {\n                        var item = rows.item(i);\n                        var result = item.value;\n\n                        // Check to see if this is serialized content\n                        // we need to unpack.\n                        if (result) {\n                            result = dbInfo.serializer.deserialize(result);\n                        }\n\n                        result = iterator(result, item.key, i + 1);\n\n                        // void(0) prevents problems with redefinition\n                        // of `undefined`.\n                        if (result !== void 0) {\n                            resolve(result);\n                            return;\n                        }\n                    }\n\n                    resolve();\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction _setItem(key, value, callback, retriesLeft) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            // The localStorage API doesn't return undefined values in an\n            // \"expected\" way, so undefined is always cast to null in all\n            // drivers. See: https://github.com/mozilla/localForage/pull/42\n            if (value === undefined) {\n                value = null;\n            }\n\n            // Save the original value to pass to the callback.\n            var originalValue = value;\n\n            var dbInfo = self._dbInfo;\n            dbInfo.serializer.serialize(value, function (value, error) {\n                if (error) {\n                    reject(error);\n                } else {\n                    dbInfo.db.transaction(function (t) {\n                        tryExecuteSql(t, dbInfo, 'INSERT OR REPLACE INTO ' + dbInfo.storeName + ' ' + '(key, value) VALUES (?, ?)', [key, value], function () {\n                            resolve(originalValue);\n                        }, function (t, error) {\n                            reject(error);\n                        });\n                    }, function (sqlError) {\n                        // The transaction failed; check\n                        // to see if it's a quota error.\n                        if (sqlError.code === sqlError.QUOTA_ERR) {\n                            // We reject the callback outright for now, but\n                            // it's worth trying to re-run the transaction.\n                            // Even if the user accepts the prompt to use\n                            // more storage on Safari, this error will\n                            // be called.\n                            //\n                            // Try to re-run the transaction.\n                            if (retriesLeft > 0) {\n                                resolve(_setItem.apply(self, [key, originalValue, callback, retriesLeft - 1]));\n                                return;\n                            }\n                            reject(sqlError);\n                        }\n                    });\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction setItem$1(key, value, callback) {\n    return _setItem.apply(this, [key, value, callback, 1]);\n}\n\nfunction removeItem$1(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'DELETE FROM ' + dbInfo.storeName + ' WHERE key = ?', [key], function () {\n                    resolve();\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Deletes every item in the table.\n// TODO: Find out if this resets the AUTO_INCREMENT number.\nfunction clear$1(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'DELETE FROM ' + dbInfo.storeName, [], function () {\n                    resolve();\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Does a simple `COUNT(key)` to get the number of items stored in\n// localForage.\nfunction length$1(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                // Ahhh, SQL makes this one soooooo easy.\n                tryExecuteSql(t, dbInfo, 'SELECT COUNT(key) as c FROM ' + dbInfo.storeName, [], function (t, results) {\n                    var result = results.rows.item(0).c;\n                    resolve(result);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Return the key located at key index X; essentially gets the key from a\n// `WHERE id = ?`. This is the most efficient way I can think to implement\n// this rarely-used (in my experience) part of the API, but it can seem\n// inconsistent, because we do `INSERT OR REPLACE INTO` on `setItem()`, so\n// the ID of each key will change every time it's updated. Perhaps a stored\n// procedure for the `setItem()` SQL would solve this problem?\n// TODO: Don't change ID on `setItem()`.\nfunction key$1(n, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'SELECT key FROM ' + dbInfo.storeName + ' WHERE id = ? LIMIT 1', [n + 1], function (t, results) {\n                    var result = results.rows.length ? results.rows.item(0).key : null;\n                    resolve(result);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction keys$1(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'SELECT key FROM ' + dbInfo.storeName, [], function (t, results) {\n                    var keys = [];\n\n                    for (var i = 0; i < results.rows.length; i++) {\n                        keys.push(results.rows.item(i).key);\n                    }\n\n                    resolve(keys);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// https://www.w3.org/TR/webdatabase/#databases\n// > There is no way to enumerate or delete the databases available for an origin from this API.\nfunction getAllStoreNames(db) {\n    return new Promise$1(function (resolve, reject) {\n        db.transaction(function (t) {\n            t.executeSql('SELECT name FROM sqlite_master ' + \"WHERE type='table' AND name <> '__WebKitDatabaseInfoTable__'\", [], function (t, results) {\n                var storeNames = [];\n\n                for (var i = 0; i < results.rows.length; i++) {\n                    storeNames.push(results.rows.item(i).name);\n                }\n\n                resolve({\n                    db: db,\n                    storeNames: storeNames\n                });\n            }, function (t, error) {\n                reject(error);\n            });\n        }, function (sqlError) {\n            reject(sqlError);\n        });\n    });\n}\n\nfunction dropInstance$1(options, callback) {\n    callback = getCallback.apply(this, arguments);\n\n    var currentConfig = this.config();\n    options = typeof options !== 'function' && options || {};\n    if (!options.name) {\n        options.name = options.name || currentConfig.name;\n        options.storeName = options.storeName || currentConfig.storeName;\n    }\n\n    var self = this;\n    var promise;\n    if (!options.name) {\n        promise = Promise$1.reject('Invalid arguments');\n    } else {\n        promise = new Promise$1(function (resolve) {\n            var db;\n            if (options.name === currentConfig.name) {\n                // use the db reference of the current instance\n                db = self._dbInfo.db;\n            } else {\n                db = openDatabase(options.name, '', '', 0);\n            }\n\n            if (!options.storeName) {\n                // drop all database tables\n                resolve(getAllStoreNames(db));\n            } else {\n                resolve({\n                    db: db,\n                    storeNames: [options.storeName]\n                });\n            }\n        }).then(function (operationInfo) {\n            return new Promise$1(function (resolve, reject) {\n                operationInfo.db.transaction(function (t) {\n                    function dropTable(storeName) {\n                        return new Promise$1(function (resolve, reject) {\n                            t.executeSql('DROP TABLE IF EXISTS ' + storeName, [], function () {\n                                resolve();\n                            }, function (t, error) {\n                                reject(error);\n                            });\n                        });\n                    }\n\n                    var operations = [];\n                    for (var i = 0, len = operationInfo.storeNames.length; i < len; i++) {\n                        operations.push(dropTable(operationInfo.storeNames[i]));\n                    }\n\n                    Promise$1.all(operations).then(function () {\n                        resolve();\n                    })[\"catch\"](function (e) {\n                        reject(e);\n                    });\n                }, function (sqlError) {\n                    reject(sqlError);\n                });\n            });\n        });\n    }\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nvar webSQLStorage = {\n    _driver: 'webSQLStorage',\n    _initStorage: _initStorage$1,\n    _support: isWebSQLValid(),\n    iterate: iterate$1,\n    getItem: getItem$1,\n    setItem: setItem$1,\n    removeItem: removeItem$1,\n    clear: clear$1,\n    length: length$1,\n    key: key$1,\n    keys: keys$1,\n    dropInstance: dropInstance$1\n};\n\nfunction isLocalStorageValid() {\n    try {\n        return typeof localStorage !== 'undefined' && 'setItem' in localStorage &&\n        // in IE8 typeof localStorage.setItem === 'object'\n        !!localStorage.setItem;\n    } catch (e) {\n        return false;\n    }\n}\n\nfunction _getKeyPrefix(options, defaultConfig) {\n    var keyPrefix = options.name + '/';\n\n    if (options.storeName !== defaultConfig.storeName) {\n        keyPrefix += options.storeName + '/';\n    }\n    return keyPrefix;\n}\n\n// Check if localStorage throws when saving an item\nfunction checkIfLocalStorageThrows() {\n    var localStorageTestKey = '_localforage_support_test';\n\n    try {\n        localStorage.setItem(localStorageTestKey, true);\n        localStorage.removeItem(localStorageTestKey);\n\n        return false;\n    } catch (e) {\n        return true;\n    }\n}\n\n// Check if localStorage is usable and allows to save an item\n// This method checks if localStorage is usable in Safari Private Browsing\n// mode, or in any other case where the available quota for localStorage\n// is 0 and there wasn't any saved items yet.\nfunction _isLocalStorageUsable() {\n    return !checkIfLocalStorageThrows() || localStorage.length > 0;\n}\n\n// Config the localStorage backend, using options set in the config.\nfunction _initStorage$2(options) {\n    var self = this;\n    var dbInfo = {};\n    if (options) {\n        for (var i in options) {\n            dbInfo[i] = options[i];\n        }\n    }\n\n    dbInfo.keyPrefix = _getKeyPrefix(options, self._defaultConfig);\n\n    if (!_isLocalStorageUsable()) {\n        return Promise$1.reject();\n    }\n\n    self._dbInfo = dbInfo;\n    dbInfo.serializer = localforageSerializer;\n\n    return Promise$1.resolve();\n}\n\n// Remove all keys from the datastore, effectively destroying all data in\n// the app's key/value store!\nfunction clear$2(callback) {\n    var self = this;\n    var promise = self.ready().then(function () {\n        var keyPrefix = self._dbInfo.keyPrefix;\n\n        for (var i = localStorage.length - 1; i >= 0; i--) {\n            var key = localStorage.key(i);\n\n            if (key.indexOf(keyPrefix) === 0) {\n                localStorage.removeItem(key);\n            }\n        }\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Retrieve an item from the store. Unlike the original async_storage\n// library in Gaia, we don't modify return values at all. If a key's value\n// is `undefined`, we pass that value to the callback function.\nfunction getItem$2(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var result = localStorage.getItem(dbInfo.keyPrefix + key);\n\n        // If a result was found, parse it from the serialized\n        // string into a JS object. If result isn't truthy, the key\n        // is likely undefined and we'll pass it straight to the\n        // callback.\n        if (result) {\n            result = dbInfo.serializer.deserialize(result);\n        }\n\n        return result;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Iterate over all items in the store.\nfunction iterate$2(iterator, callback) {\n    var self = this;\n\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var keyPrefix = dbInfo.keyPrefix;\n        var keyPrefixLength = keyPrefix.length;\n        var length = localStorage.length;\n\n        // We use a dedicated iterator instead of the `i` variable below\n        // so other keys we fetch in localStorage aren't counted in\n        // the `iterationNumber` argument passed to the `iterate()`\n        // callback.\n        //\n        // See: github.com/mozilla/localForage/pull/435#discussion_r38061530\n        var iterationNumber = 1;\n\n        for (var i = 0; i < length; i++) {\n            var key = localStorage.key(i);\n            if (key.indexOf(keyPrefix) !== 0) {\n                continue;\n            }\n            var value = localStorage.getItem(key);\n\n            // If a result was found, parse it from the serialized\n            // string into a JS object. If result isn't truthy, the\n            // key is likely undefined and we'll pass it straight\n            // to the iterator.\n            if (value) {\n                value = dbInfo.serializer.deserialize(value);\n            }\n\n            value = iterator(value, key.substring(keyPrefixLength), iterationNumber++);\n\n            if (value !== void 0) {\n                return value;\n            }\n        }\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Same as localStorage's key() method, except takes a callback.\nfunction key$2(n, callback) {\n    var self = this;\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var result;\n        try {\n            result = localStorage.key(n);\n        } catch (error) {\n            result = null;\n        }\n\n        // Remove the prefix from the key, if a key is found.\n        if (result) {\n            result = result.substring(dbInfo.keyPrefix.length);\n        }\n\n        return result;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction keys$2(callback) {\n    var self = this;\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var length = localStorage.length;\n        var keys = [];\n\n        for (var i = 0; i < length; i++) {\n            var itemKey = localStorage.key(i);\n            if (itemKey.indexOf(dbInfo.keyPrefix) === 0) {\n                keys.push(itemKey.substring(dbInfo.keyPrefix.length));\n            }\n        }\n\n        return keys;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Supply the number of keys in the datastore to the callback function.\nfunction length$2(callback) {\n    var self = this;\n    var promise = self.keys().then(function (keys) {\n        return keys.length;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Remove an item from the store, nice and simple.\nfunction removeItem$2(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        localStorage.removeItem(dbInfo.keyPrefix + key);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Set a key's value and run an optional callback once the value is set.\n// Unlike Gaia's implementation, the callback function is passed the value,\n// in case you want to operate on that value only after you're sure it\n// saved, or something like that.\nfunction setItem$2(key, value, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = self.ready().then(function () {\n        // Convert undefined values to null.\n        // https://github.com/mozilla/localForage/pull/42\n        if (value === undefined) {\n            value = null;\n        }\n\n        // Save the original value to pass to the callback.\n        var originalValue = value;\n\n        return new Promise$1(function (resolve, reject) {\n            var dbInfo = self._dbInfo;\n            dbInfo.serializer.serialize(value, function (value, error) {\n                if (error) {\n                    reject(error);\n                } else {\n                    try {\n                        localStorage.setItem(dbInfo.keyPrefix + key, value);\n                        resolve(originalValue);\n                    } catch (e) {\n                        // localStorage capacity exceeded.\n                        // TODO: Make this a specific error/event.\n                        if (e.name === 'QuotaExceededError' || e.name === 'NS_ERROR_DOM_QUOTA_REACHED') {\n                            reject(e);\n                        }\n                        reject(e);\n                    }\n                }\n            });\n        });\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction dropInstance$2(options, callback) {\n    callback = getCallback.apply(this, arguments);\n\n    options = typeof options !== 'function' && options || {};\n    if (!options.name) {\n        var currentConfig = this.config();\n        options.name = options.name || currentConfig.name;\n        options.storeName = options.storeName || currentConfig.storeName;\n    }\n\n    var self = this;\n    var promise;\n    if (!options.name) {\n        promise = Promise$1.reject('Invalid arguments');\n    } else {\n        promise = new Promise$1(function (resolve) {\n            if (!options.storeName) {\n                resolve(options.name + '/');\n            } else {\n                resolve(_getKeyPrefix(options, self._defaultConfig));\n            }\n        }).then(function (keyPrefix) {\n            for (var i = localStorage.length - 1; i >= 0; i--) {\n                var key = localStorage.key(i);\n\n                if (key.indexOf(keyPrefix) === 0) {\n                    localStorage.removeItem(key);\n                }\n            }\n        });\n    }\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nvar localStorageWrapper = {\n    _driver: 'localStorageWrapper',\n    _initStorage: _initStorage$2,\n    _support: isLocalStorageValid(),\n    iterate: iterate$2,\n    getItem: getItem$2,\n    setItem: setItem$2,\n    removeItem: removeItem$2,\n    clear: clear$2,\n    length: length$2,\n    key: key$2,\n    keys: keys$2,\n    dropInstance: dropInstance$2\n};\n\nvar sameValue = function sameValue(x, y) {\n    return x === y || typeof x === 'number' && typeof y === 'number' && isNaN(x) && isNaN(y);\n};\n\nvar includes = function includes(array, searchElement) {\n    var len = array.length;\n    var i = 0;\n    while (i < len) {\n        if (sameValue(array[i], searchElement)) {\n            return true;\n        }\n        i++;\n    }\n\n    return false;\n};\n\nvar isArray = Array.isArray || function (arg) {\n    return Object.prototype.toString.call(arg) === '[object Array]';\n};\n\n// Drivers are stored here when `defineDriver()` is called.\n// They are shared across all instances of localForage.\nvar DefinedDrivers = {};\n\nvar DriverSupport = {};\n\nvar DefaultDrivers = {\n    INDEXEDDB: asyncStorage,\n    WEBSQL: webSQLStorage,\n    LOCALSTORAGE: localStorageWrapper\n};\n\nvar DefaultDriverOrder = [DefaultDrivers.INDEXEDDB._driver, DefaultDrivers.WEBSQL._driver, DefaultDrivers.LOCALSTORAGE._driver];\n\nvar OptionalDriverMethods = ['dropInstance'];\n\nvar LibraryMethods = ['clear', 'getItem', 'iterate', 'key', 'keys', 'length', 'removeItem', 'setItem'].concat(OptionalDriverMethods);\n\nvar DefaultConfig = {\n    description: '',\n    driver: DefaultDriverOrder.slice(),\n    name: 'localforage',\n    // Default DB size is _JUST UNDER_ 5MB, as it's the highest size\n    // we can use without a prompt.\n    size: 4980736,\n    storeName: 'keyvaluepairs',\n    version: 1.0\n};\n\nfunction callWhenReady(localForageInstance, libraryMethod) {\n    localForageInstance[libraryMethod] = function () {\n        var _args = arguments;\n        return localForageInstance.ready().then(function () {\n            return localForageInstance[libraryMethod].apply(localForageInstance, _args);\n        });\n    };\n}\n\nfunction extend() {\n    for (var i = 1; i < arguments.length; i++) {\n        var arg = arguments[i];\n\n        if (arg) {\n            for (var _key in arg) {\n                if (arg.hasOwnProperty(_key)) {\n                    if (isArray(arg[_key])) {\n                        arguments[0][_key] = arg[_key].slice();\n                    } else {\n                        arguments[0][_key] = arg[_key];\n                    }\n                }\n            }\n        }\n    }\n\n    return arguments[0];\n}\n\nvar LocalForage = function () {\n    function LocalForage(options) {\n        _classCallCheck(this, LocalForage);\n\n        for (var driverTypeKey in DefaultDrivers) {\n            if (DefaultDrivers.hasOwnProperty(driverTypeKey)) {\n                var driver = DefaultDrivers[driverTypeKey];\n                var driverName = driver._driver;\n                this[driverTypeKey] = driverName;\n\n                if (!DefinedDrivers[driverName]) {\n                    // we don't need to wait for the promise,\n                    // since the default drivers can be defined\n                    // in a blocking manner\n                    this.defineDriver(driver);\n                }\n            }\n        }\n\n        this._defaultConfig = extend({}, DefaultConfig);\n        this._config = extend({}, this._defaultConfig, options);\n        this._driverSet = null;\n        this._initDriver = null;\n        this._ready = false;\n        this._dbInfo = null;\n\n        this._wrapLibraryMethodsWithReady();\n        this.setDriver(this._config.driver)[\"catch\"](function () {});\n    }\n\n    // Set any config values for localForage; can be called anytime before\n    // the first API call (e.g. `getItem`, `setItem`).\n    // We loop through options so we don't overwrite existing config\n    // values.\n\n\n    LocalForage.prototype.config = function config(options) {\n        // If the options argument is an object, we use it to set values.\n        // Otherwise, we return either a specified config value or all\n        // config values.\n        if ((typeof options === 'undefined' ? 'undefined' : _typeof(options)) === 'object') {\n            // If localforage is ready and fully initialized, we can't set\n            // any new configuration values. Instead, we return an error.\n            if (this._ready) {\n                return new Error(\"Can't call config() after localforage \" + 'has been used.');\n            }\n\n            for (var i in options) {\n                if (i === 'storeName') {\n                    options[i] = options[i].replace(/\\W/g, '_');\n                }\n\n                if (i === 'version' && typeof options[i] !== 'number') {\n                    return new Error('Database version must be a number.');\n                }\n\n                this._config[i] = options[i];\n            }\n\n            // after all config options are set and\n            // the driver option is used, try setting it\n            if ('driver' in options && options.driver) {\n                return this.setDriver(this._config.driver);\n            }\n\n            return true;\n        } else if (typeof options === 'string') {\n            return this._config[options];\n        } else {\n            return this._config;\n        }\n    };\n\n    // Used to define a custom driver, shared across all instances of\n    // localForage.\n\n\n    LocalForage.prototype.defineDriver = function defineDriver(driverObject, callback, errorCallback) {\n        var promise = new Promise$1(function (resolve, reject) {\n            try {\n                var driverName = driverObject._driver;\n                var complianceError = new Error('Custom driver not compliant; see ' + 'https://mozilla.github.io/localForage/#definedriver');\n\n                // A driver name should be defined and not overlap with the\n                // library-defined, default drivers.\n                if (!driverObject._driver) {\n                    reject(complianceError);\n                    return;\n                }\n\n                var driverMethods = LibraryMethods.concat('_initStorage');\n                for (var i = 0, len = driverMethods.length; i < len; i++) {\n                    var driverMethodName = driverMethods[i];\n\n                    // when the property is there,\n                    // it should be a method even when optional\n                    var isRequired = !includes(OptionalDriverMethods, driverMethodName);\n                    if ((isRequired || driverObject[driverMethodName]) && typeof driverObject[driverMethodName] !== 'function') {\n                        reject(complianceError);\n                        return;\n                    }\n                }\n\n                var configureMissingMethods = function configureMissingMethods() {\n                    var methodNotImplementedFactory = function methodNotImplementedFactory(methodName) {\n                        return function () {\n                            var error = new Error('Method ' + methodName + ' is not implemented by the current driver');\n                            var promise = Promise$1.reject(error);\n                            executeCallback(promise, arguments[arguments.length - 1]);\n                            return promise;\n                        };\n                    };\n\n                    for (var _i = 0, _len = OptionalDriverMethods.length; _i < _len; _i++) {\n                        var optionalDriverMethod = OptionalDriverMethods[_i];\n                        if (!driverObject[optionalDriverMethod]) {\n                            driverObject[optionalDriverMethod] = methodNotImplementedFactory(optionalDriverMethod);\n                        }\n                    }\n                };\n\n                configureMissingMethods();\n\n                var setDriverSupport = function setDriverSupport(support) {\n                    if (DefinedDrivers[driverName]) {\n                        console.info('Redefining LocalForage driver: ' + driverName);\n                    }\n                    DefinedDrivers[driverName] = driverObject;\n                    DriverSupport[driverName] = support;\n                    // don't use a then, so that we can define\n                    // drivers that have simple _support methods\n                    // in a blocking manner\n                    resolve();\n                };\n\n                if ('_support' in driverObject) {\n                    if (driverObject._support && typeof driverObject._support === 'function') {\n                        driverObject._support().then(setDriverSupport, reject);\n                    } else {\n                        setDriverSupport(!!driverObject._support);\n                    }\n                } else {\n                    setDriverSupport(true);\n                }\n            } catch (e) {\n                reject(e);\n            }\n        });\n\n        executeTwoCallbacks(promise, callback, errorCallback);\n        return promise;\n    };\n\n    LocalForage.prototype.driver = function driver() {\n        return this._driver || null;\n    };\n\n    LocalForage.prototype.getDriver = function getDriver(driverName, callback, errorCallback) {\n        var getDriverPromise = DefinedDrivers[driverName] ? Promise$1.resolve(DefinedDrivers[driverName]) : Promise$1.reject(new Error('Driver not found.'));\n\n        executeTwoCallbacks(getDriverPromise, callback, errorCallback);\n        return getDriverPromise;\n    };\n\n    LocalForage.prototype.getSerializer = function getSerializer(callback) {\n        var serializerPromise = Promise$1.resolve(localforageSerializer);\n        executeTwoCallbacks(serializerPromise, callback);\n        return serializerPromise;\n    };\n\n    LocalForage.prototype.ready = function ready(callback) {\n        var self = this;\n\n        var promise = self._driverSet.then(function () {\n            if (self._ready === null) {\n                self._ready = self._initDriver();\n            }\n\n            return self._ready;\n        });\n\n        executeTwoCallbacks(promise, callback, callback);\n        return promise;\n    };\n\n    LocalForage.prototype.setDriver = function setDriver(drivers, callback, errorCallback) {\n        var self = this;\n\n        if (!isArray(drivers)) {\n            drivers = [drivers];\n        }\n\n        var supportedDrivers = this._getSupportedDrivers(drivers);\n\n        function setDriverToConfig() {\n            self._config.driver = self.driver();\n        }\n\n        function extendSelfWithDriver(driver) {\n            self._extend(driver);\n            setDriverToConfig();\n\n            self._ready = self._initStorage(self._config);\n            return self._ready;\n        }\n\n        function initDriver(supportedDrivers) {\n            return function () {\n                var currentDriverIndex = 0;\n\n                function driverPromiseLoop() {\n                    while (currentDriverIndex < supportedDrivers.length) {\n                        var driverName = supportedDrivers[currentDriverIndex];\n                        currentDriverIndex++;\n\n                        self._dbInfo = null;\n                        self._ready = null;\n\n                        return self.getDriver(driverName).then(extendSelfWithDriver)[\"catch\"](driverPromiseLoop);\n                    }\n\n                    setDriverToConfig();\n                    var error = new Error('No available storage method found.');\n                    self._driverSet = Promise$1.reject(error);\n                    return self._driverSet;\n                }\n\n                return driverPromiseLoop();\n            };\n        }\n\n        // There might be a driver initialization in progress\n        // so wait for it to finish in order to avoid a possible\n        // race condition to set _dbInfo\n        var oldDriverSetDone = this._driverSet !== null ? this._driverSet[\"catch\"](function () {\n            return Promise$1.resolve();\n        }) : Promise$1.resolve();\n\n        this._driverSet = oldDriverSetDone.then(function () {\n            var driverName = supportedDrivers[0];\n            self._dbInfo = null;\n            self._ready = null;\n\n            return self.getDriver(driverName).then(function (driver) {\n                self._driver = driver._driver;\n                setDriverToConfig();\n                self._wrapLibraryMethodsWithReady();\n                self._initDriver = initDriver(supportedDrivers);\n            });\n        })[\"catch\"](function () {\n            setDriverToConfig();\n            var error = new Error('No available storage method found.');\n            self._driverSet = Promise$1.reject(error);\n            return self._driverSet;\n        });\n\n        executeTwoCallbacks(this._driverSet, callback, errorCallback);\n        return this._driverSet;\n    };\n\n    LocalForage.prototype.supports = function supports(driverName) {\n        return !!DriverSupport[driverName];\n    };\n\n    LocalForage.prototype._extend = function _extend(libraryMethodsAndProperties) {\n        extend(this, libraryMethodsAndProperties);\n    };\n\n    LocalForage.prototype._getSupportedDrivers = function _getSupportedDrivers(drivers) {\n        var supportedDrivers = [];\n        for (var i = 0, len = drivers.length; i < len; i++) {\n            var driverName = drivers[i];\n            if (this.supports(driverName)) {\n                supportedDrivers.push(driverName);\n            }\n        }\n        return supportedDrivers;\n    };\n\n    LocalForage.prototype._wrapLibraryMethodsWithReady = function _wrapLibraryMethodsWithReady() {\n        // Add a stub for each driver API method that delays the call to the\n        // corresponding driver method until localForage is ready. These stubs\n        // will be replaced by the driver methods as soon as the driver is\n        // loaded, so there is no performance impact.\n        for (var i = 0, len = LibraryMethods.length; i < len; i++) {\n            callWhenReady(this, LibraryMethods[i]);\n        }\n    };\n\n    LocalForage.prototype.createInstance = function createInstance(options) {\n        return new LocalForage(options);\n    };\n\n    return LocalForage;\n}();\n\n// The actual localForage object that we expose as a module or via a\n// global. It's extended by pulling in one of our other libraries.\n\n\nvar localforage_js = new LocalForage();\n\nmodule.exports = localforage_js;\n\n},{\"3\":3}]},{},[4])(4)\n});\n"],"sourceRoot":""}